<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ivucenter.cloud.portal.req.product.ReqProductDAO">

  	<!--박현오 프로젝트 관련 시작-->
	<!--상품 신청  리스트              <![CDATA[<>]]>-->
	<!-- 2020.05.27 변경된 결재기능으로 미사용 -->
	<!--
    <select id="list" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
		SELECT
			BOR.order_no,
			BOR.order_user_id,
			CU.user_name AS order_user_name,
			CS.customer_name,
			CD.dept_name,
			BOR.step_level,
			BOR.apprv_state,
			PRO.amount,
			PRO.order_count,
			PRO.new_cnt,
			PRO.change_cnt,
			PRO.expr_cnt,
			PRO.project_name,
			IF(PRO.workState = 'Y', CC.code_name, '작업자 작업중') AS apprv_state_name,
			DATE_FORMAT(BOR.order_datetime, '%Y-%m-%d %H:%i') AS order_datetime,
			BOR.my_job
		FROM
		(
			SELECT
			 	BO.order_no, BO.order_user_id, BO.order_datetime,
			 	IFNULL(SAS.step_level, '5') AS step_level,
			 	IF(BO.apprv_state ='APPRV_COMPLETED', BO.apprv_state, IFNULL(SAS.apprv_state, 'APPRV_COMPLETED')) AS apprv_state
			 	<if test="searchAll == 'my'">
				, 'Y' AS my_job
				</if>
				<if test="searchAll != 'my'">
				, (SELECT IF(COUNT(*) = 1, 'Y', 'N') FROM approval_model_member	WHERE step_id = SAS.step_id AND user_id = #{userId}) AS my_job
				</if>
			FROM
			<if test="searchAll == 'my'">
				( SELECT * FROM bss_order)  BO
			INNER JOIN
			 	(
					SELECT
			 	    	*
			 	    FROM
                    	sr_approval_step
			 	 	WHERE
			 	 		apprv_state ='APPRV_PROCESSING'
			 	 		AND step_level > 4
			 	 		<if test="userId != 'admin'">
			   	 		AND step_id IN (SELECT step_id FROM approval_model_member WHERE user_id = #{userId} AND step_id <![CDATA[<>]]>'*' )
			 	 		</if>
			 	) SAS
			 ON SAS.request_seq = BO.order_no
			</if>

			<if test="searchAll != 'my'">
				(SELECT * FROM bss_order) BO
			LEFT JOIN
				(
					SELECT
						*
					FROM
						sr_approval_step
					WHERE
						apprv_state<![CDATA[<>]]>'APPRV_COMPLETED'
					GROUP BY
						request_seq
					ORDER BY
						request_seq DESC, step_level ASC
				)SAS
				ON SAS.request_seq = BO.order_no
            </if>

		) BOR
		LEFT JOIN
		(
			SELECT
				code_id, code_name
			FROM cmm_code
		    WHERE parent_code_id = 'APPRV_STATE'
		) CC
		ON CC.code_id = BOR.apprv_state

		LEFT JOIN cmm_user CU
		ON CU.user_id = BOR.order_user_id

		LEFT JOIN cmm_department CD
		ON CD.dept_code = CU.dept_code

		LEFT OUTER JOIN cmm_customer CS
		ON CS.customer_id = CU.customer_id

		LEFT JOIN (
			SELECT
				Z.order_no
				, Z.order_product_seq
				, FORMAT(FLOOR(SUM(amount)),0) AS amount
				, IFNULL(COUNT(order_no),0) AS order_count
				, SUM(Z.newCnt) AS new_cnt
				, SUM(Z.changeCnt) AS change_cnt
				, SUM(Z.exprCnt) AS expr_cnt
				, IF((COUNT(DISTINCT Z.projectId) > 1), CONCAT(OP.project_name, ' 외 ', (COUNT(DISTINCT Z.projectId)-1),'건'), OP.project_name) AS project_name
				, Z.workState
			FROM(
				SELECT
					BOP.order_no
					, BOP.order_product_seq
					, IF(request_type='REQTYPE_NEW', 1, 0) AS newCnt
					, IF(request_type='REQTYPE_CHANGE', 1, 0) AS changeCnt
					, IF(request_type='REQTYPE_EXPR', 1, 0) AS exprCnt
					, IFNULL(amount, 0) AS amount
					, CONCAT(
						IFNULL(BOPD.project_id,'')
						, IFNULL(BOPV.project_id,'')
						, IFNULL(BOPSER.project_id,'')
					) AS projectId
					, IFNULL(RW.work_state, 'Y') AS workState
				FROM bss_order_product BOP
				LEFT JOIN bss_order_product_service BOPSER
				ON BOP.order_product_seq = BOPSER.order_product_seq

				LEFT JOIN bss_order_product_disk BOPD
				ON BOP.order_product_seq = BOPD.order_product_seq

				LEFT JOIN bss_order_product_vm BOPV
				ON BOP.order_product_seq = BOPV.order_product_seq

				LEFT JOIN req_work RW
				ON RW.order_product_seq = BOP.order_product_seq

				GROUP BY BOP.order_product_seq

			)Z
			LEFT JOIN (SELECT project_id, IF(project_alias='', project_name, project_alias) AS project_name FROM oss_project) OP
			ON Z.projectId = OP.project_id

			GROUP BY Z.order_no
		)PRO
		ON PRO.order_no = BOR.order_no
		WHERE 1=1
		<if test="searchAll == 'my'">
			AND BOR.my_job = 'Y'
			AND BOR.apprv_state <![CDATA[<>]]> 'APPRV_REJECTED'
		</if>
		<if test="searchKind == 'projectName' and keyword != ''">
			AND PRO.project_name  like CONCAT('%',#{keyword},'%')
		</if>
		<if test="searchKind == 'orderUserName' and keyword != ''">
			AND CU.user_name  like CONCAT('%',#{keyword},'%')
		</if>
		<if test="searchKind == 'customerName' and keyword != ''">
			AND CS.customer_name  like CONCAT('%',#{keyword},'%')
		</if>
		<if test="searchKind == 'orderNo' and keyword != ''">
			AND BOR.order_no  like CONCAT('%',#{keyword},'%')
		</if>

		<if test="searchKind == 'searchAll' and keyword != ''">
		AND (
				PRO.project_name  like CONCAT('%',#{keyword},'%')
		OR
			 	CU.user_name  like CONCAT('%',#{keyword},'%')
		OR
				CS.customer_name  like CONCAT('%',#{keyword},'%')
			)
		</if>
		AND new_cnt + change_cnt + expr_cnt > 0
		ORDER BY BOR.order_datetime	desc
		<if test="!length.equals(0)">
					LIMIT #{start}, #{length}
		</if>

  	</select>
  	-->

  	<select id="list" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">

		SELECT * FROM (
		SELECT
			PRO.cloud_id,
			BOR.order_no,
			CU.user_name AS order_user_name,
			CD.dept_name,
			BOR.apprv_state,
			BOR.step_level,
			DEPT.dept_name AS dept_name2,
			PRO.new_cnt,
			PRO.change_cnt,
			PRO.expr_cnt,
			PRO.project_name
		FROM
		(
			SELECT
			 	BO.order_no, BO.order_user_id, BO.order_datetime,
			 	IFNULL(SAS.step_level, '8') AS step_level,
			 	IFNULL(SAS.apprv_state, 'APPRV_COMPLETED') AS apprv_state
			FROM
			<if test="searchAll == 'my'">
				bss_order BO
			INNER JOIN
			 	(
					SELECT	A.apprv_state,
							A.request_seq,
							A.step_level
			 	    FROM  	sr_approval_step A
                    LEFT JOIN provisioning_queue B ON A.request_seq = B.order_product_seq
			 	 	WHERE
			 	 		apprv_state IN (
							'APPRV_PROCESSING'
							<if test="userId == 'admin' ">
							, 'APPRV_UNASSIGNED'
							</if>
						)
			 	 		AND step_level > 4
			 	 		<if test="userId != 'admin'">
			   	 		AND
			   	 		(
			   	 			apprv_schedule_user_id = #{userId}

	 					)
			 	 		</if>
			 	 		 OR
			 	 		(
			 	 			EXISTS (SELECT 1
			 	 						FROM bss_order_product B
			 	 					LEFT JOIN provisioning_queue C
			 	 						ON B.order_product_seq = C.order_product_seq
			 	 					WHERE B.order_no = A.request_seq
			 	 			AND A.step_level = 8
							AND	A.apprv_state = 'APPRV_COMPLETED')
			 	 		)
			 	) SAS
			 ON SAS.request_seq = BO.order_no
			</if>
			<if test="searchAll != 'my'">
				(SELECT * FROM bss_order) BO
					LEFT JOIN
						(SELECT * FROM sr_approval_step WHERE apprv_state <![CDATA[<>]]> 'APPRV_COMPLETED'
							GROUP BY request_seq ORDER BY request_seq DESC, step_level ASC) SAS
						ON SAS.request_seq = BO.order_no
            </if>
		) BOR
		LEFT JOIN cmm_user CU	ON CU.user_id = BOR.order_user_id
		LEFT JOIN cmm_department CD		ON CD.dept_code = CU.dept_code
		LEFT JOIN(
			SELECT  dept_code,
					SYS_CONNECT_BY_PATH(TRIM(dept_name), ' / ') AS dept_name
			   FROM  cmm_department
			  WHERE del_flag != 'Y'
			  START WITH up_code IS null
			  CONNECT BY PRIOR dept_code = up_code
			  ORDER SIBLINGS BY dept_code
		) DEPT ON DEPT.dept_code = CU.dept_code
		LEFT JOIN (
			SELECT
				Z.order_no
				, Z.cloud_id
				, SUM(Z.newCnt) AS new_cnt
				, SUM(Z.changeCnt) AS change_cnt
				, SUM(Z.exprCnt) AS expr_cnt
				, OP.project_name AS project_name
				, Z.workState
			FROM(
				SELECT
					BOP.order_no
					, BOP.order_product_seq
					, BOP.cloud_id
					, IF(request_type='REQTYPE_NEW', 1, 0) AS newCnt
					, IF(request_type='REQTYPE_CHANGE', 1, 0) AS changeCnt
					, IF(request_type='REQTYPE_EXPR', 1, 0) AS exprCnt
					, CONCAT(
						IFNULL(BOPD.project_id,'')
						, IFNULL((SELECT project_id FROM oss_project WHERE project_box_id = BOPL.project_id GROUP BY project_box_id),'')
						, IFNULL((SELECT project_id FROM oss_project WHERE project_box_id = BOPS.project_id GROUP BY project_box_id),'')
						, IFNULL(BOPV.project_id,'')
						, IFNULL(BOPSER.project_id,'')
						, IFNULL(BOAP.project_id,'')
						, IFNULL(OPJ.project_id, '')
						, IFNULL(BOPN.project_id,'')
					) AS projectId
					, IFNULL(RW.work_state, 'Y') AS workState
				FROM bss_order_product BOP
				LEFT JOIN bss_order_product_service BOPSER				ON BOP.order_product_seq = BOPSER.order_product_seq
				LEFT JOIN bss_order_product_disk BOPD					ON BOP.order_product_seq = BOPD.order_product_seq
				LEFT JOIN bss_order_product_vm BOPV						ON BOP.order_product_seq = BOPV.order_product_seq
				LEFT JOIN bss_order_product_loadbalancer BOPL			ON BOP.order_product_seq = BOPL.order_product_seq
				LEFT JOIN bss_order_product_snapshot BOPS				ON BOP.order_product_seq = BOPS.order_product_seq
				LEFT JOIN bss_order_product_app BOAP					ON BOP.order_product_seq = BOAP.order_product_seq
				LEFT JOIN (SELECT a.*,b.project_id FROM bss_order_product_env a LEFT JOIN oss_project b ON a.project_box_id = b.project_box_id WHERE b.env_type = 'DEV') OPJ ON BOP.order_product_seq = OPJ.order_product_seq
				LEFT JOIN bss_order_product_nas BOPN					ON BOP.order_product_seq = BOPN.order_product_seq
				LEFT JOIN req_work RW
				ON RW.order_product_seq = BOP.order_product_seq
				WHERE 1=1
				<if test="cloudId!=null and !cloudId.equals('')">
					AND BOP.cloud_id = #{cloudId}
				</if>
				GROUP BY BOP.order_product_seq
			)Z
			LEFT JOIN (SELECT project_id, IF(project_alias='', project_name, project_alias) AS project_name FROM oss_project) OP
			ON Z.projectId = OP.project_id
			GROUP BY Z.order_no
		)PRO
		ON PRO.order_no = BOR.order_no
		WHERE 1=1
		<if test="searchAll == 'my'">
			AND BOR.apprv_state	<![CDATA[<>]]> 'APPRV_COMPLETED'
			AND BOR.apprv_state <![CDATA[<>]]> 'APPRV_REJECTED'
		</if>
		<if test="searchKind == 'projectName' and keyword != ''">
			AND PRO.project_name  like CONCAT('%',#{keyword},'%')
		</if>
		<if test="searchKind == 'orderUserName' and keyword != ''">
			AND CU.user_name  like CONCAT('%',#{keyword},'%')
		</if>
		<if test="searchKind == 'customerName' and keyword != ''">
			AND CS.customer_name  like CONCAT('%',#{keyword},'%')
		</if>
		<if test="searchKind == 'orderNo' and keyword != ''">
			AND BOR.order_no  like CONCAT('%',#{keyword},'%')
		</if>
		<if test="searchKind == 'searchAll' and keyword != ''">
		AND (
				PRO.project_name  like CONCAT('%',#{keyword},'%')
		OR
			 	CU.user_name  like CONCAT('%',#{keyword},'%')
		OR
				CS.customer_name  like CONCAT('%',#{keyword},'%')
			)
		</if>
		AND new_cnt + change_cnt + expr_cnt > 0
		ORDER BY BOR.order_datetime	desc
		) TOT
		WHERE 1=1
		<!-- AND TOT.order_user_id != 'admin' -->
			<if test="searchKindStatus == 'APPRV_PROCESSING'">
				AND TOT.apprv_state = 'APPRV_PROCESSING'
			</if>
				<if test="searchKindStatus == 'APPRV_COMPLETED'">
				AND TOT.apprv_state = 'APPRV_COMPLETED'
			</if>
			<if test="searchKindStatus == 'APPRV_REJECTED'">
				AND TOT.apprv_state = 'APPRV_REJECTED'
			</if>
			<if test="searchKindStatus == 'APPRV_UNASSIGNED'">
				AND TOT.apprv_state = 'APPRV_UNASSIGNED'
			</if>
				<if test="searchKindStatus == 'PROVISIONING_FAIL'">
				AND TOT.provisioning_status = 'PROVISIONING_FAIL'
			</if>
		<if test="!length.equals(0)">
					LIMIT #{start}, #{length}
		</if>
  	</select>

  	<!--  	상품 신청현황 리스트 상세조회-->
<!--
    <select id="detail_bak" parameterType="CustomReqProductVO" resultType="CustomReqProductVO">
		SELECT
			*
			,(SELECT project_alias FROM oss_project WHERE project_id=b.project_id) AS project_alias
			,(SELECT order_user_id FROM bss_order WHERE order_no=a.order_no) AS order_user_id
		FROM
			bss_order_product a
		INNER JOIN
			bss_order_product_vm b
		ON
			a.order_product_seq = b.order_product_seq
		WHERE
			a.order_no=#{orderNo}
	</select>
-->

	<select id="detailBssOrderProductVm" resultType="CustomReqProductVO">
	SELECT
				a.order_product_seq,
				a.on_demand_flag,
				a.apply_datetime,
				a.hourly_flag,
				a.project_id,
				a.vm_uuid,
				a.default_network_id,
				a.default_network_name,
				a.default_network_alias,
				a.default_network_ip,
				a.backup_network_flag,
				a.backup_network_id,
				a.backup_network_name,
				a.backup_network_alias,
				a.backup_network_ip,
				a.hostname,
				a.hostname_alias,
				a.flavor_id,
				a.before_flavor_id,
				a.vcpus,
				a.before_vcpus,
				a.mem_gb,
				a.before_mem_gb,
				a.volume_type,
				a.disk_gb,
				a.image_id,
				a.image_name,
				a.host_aggregate,
				a.az_name,
				a.req_message,
				a.description,
				a.vm_catalog_seq,
				a.vm_product_seq,
				a.os_product_seq,
				a.datastore_id,
				b.product_seq,
				b.item_id,
				b.vm_image_id,
				b.vm_image_name,
				b.image_alias,
				b.image_path,
				b.image_range,
				b.image_size,
				b.image_format,
				b.container_format,
				b.image_content,
				b.image_type,
				b.hourly_price,
				b.monthly_price,
				IFNULL(b.cloud_id,c.cloud_id) AS cloud_id,
				c.project_id,
				c.customer_id,
				c.project_manager_id,
				c.project_name,
				c.project_alias,
				c.description,
				c.reg_datetime,
				c.reg_user_id,
				c.mod_datetime,
				c.mod_user_id,
				c.delete_flag,
				c.dept_code,
				c.program_seq,
				c.project_start_datetime,
				c.project_end_datetime,
				c.project_price,
				c.project_box_id,
				c.quota_yn,
				d.subnet_id,
				d.subnet_name,
				d.subnet_alias,
				d.network_id,
				d.allocation_pools,
				d.subnet_cidr,
				d.enable_dhcp,
				d.gateway_ip,
				d.dns_nameservers,
				d.reg_datetime,
				d.reg_user_id,
				d.mod_datetime,
				d.mod_user_id,
				d.delete_flag,
				e.network_id,
				e.port_network_id,
				e.backup_network_id,
				e.port_backup_network_id,
				e.vm_uuid
		FROM
			bss_order_product_vm a
		LEFT JOIN
			bss_product_os b
			ON a.os_product_seq = b.product_seq
		LEFT JOIN
			oss_project c
			ON a.project_id = c.project_id
		LEFT JOIN
			oss_subnet d
			ON a.default_network_id = d.network_id
		LEFT JOIN
			oss_vm_network e
			ON a.vm_uuid = e.vm_uuid
		WHERE
			a.order_product_seq = #{orderProductSeq}
	</select>

	<select id="detailBssOrderProductDisk" resultType="CustomReqProductVO">
		SELECT
			*
		FROM
			bss_order_product_disk a
		LEFT JOIN
			oss_project c
			ON a.project_id=c.project_id
		WHERE
			order_product_seq = #{orderProductSeq}
	</select>

	<select id="detailBssOrderProductNas" resultType="CustomReqProductVO">
		SELECT
			*
		FROM
			bss_order_product_nas a
		LEFT JOIN
			oss_project c
			ON a.project_id=c.project_id
		WHERE
			order_product_seq = #{orderProductSeq}
	</select>

	<select id="detailBssOrderProductApp" resultType="CustomReqProductVO">
		SELECT
			*
		FROM
			bss_order_product_app a
		LEFT JOIN
			oss_project c
			ON a.project_id=c.project_id
		WHERE
			order_product_seq = #{orderProductSeq}
	</select>



	<select id="detailBssOrderProductEnv" resultType="CustomReqProductVO">
		SELECT
			*
		FROM
			bss_order_product_env a
		LEFT JOIN
			oss_project c
			ON a.project_box_id=c.project_box_id
		WHERE
			order_product_seq = #{orderProductSeq}
		AND
			C.env_type = 'DEV'
     </select>

   	<select id="detailBssOrderProductEnvUserList" resultType="CustomReqProductVO">
		SELECT
			*
		FROM
			bss_order_product_env_user a
		WHERE
			order_product_seq = #{orderProductSeq}
     </select>

	<select id="detailBssOrderProductService" resultType="CustomReqProductVO">
		SELECT
			*
		FROM
			bss_order_product_service a
		LEFT JOIN
			oss_project c
		ON a.project_id = c.project_id
		WHERE
			a.order_product_seq = #{orderProductSeq}
	</select>

	<select id="detail" parameterType="CustomReqProductVO" resultType="CustomReqProductVO">
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			ORDVM.on_demand_flag,	/* 즉시희망 여부*/
			ORDVM.apply_datetime,	/* 서비스 희망 일시 */
			ORDVM.hourly_flag,	/* 시간단위 과금여부 */
			ORDVM.project_id  AS project_id,	/* 프로젝트 ID */
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			ORDVM.vm_uuid,			/* 가상서버 UUID */
			CASE PRD.request_type
				WHEN 'REQTYPE_NEW' THEN ORDVM.hostname	ELSE VM.hostname
			END AS hostname,	/* 가상서버 호스트명 */
			CASE PRD.request_type
				WHEN 'REQTYPE_NEW' THEN ORDVM.hostname_alias ELSE VM.hostname_alias
			END AS hostname_alias,	/* 가상서버 호스트명 */
			ORDVM.default_network_id,	/* 네트워크 ID */
			NT.network_alias AS default_network_name,	/* 네트워크 이름 한글  */
			ORDVM.description  	AS description,	/* 비고 */
			ORDVM.vcpus, /* vcpu*/
			ORDVM.mem_gb, /* 메모리 */
			ORDVM.disk_gb AS vm_disk_gb, /* 디스크 용량 */
			ORDVM.vm_catalog_seq, 		/* 가상서버 카탈로그 SEQ */
			ORDVM.vm_product_seq,		/* 가상서버 상품 SEQ */
			PRDVM.product_name AS vm_product_name,	 /* 가상서버 상품 이름 */
			CF.file_id AS image_name,	/* 가상서버 이미지 경로 */
			ORDVM.os_product_seq, 			/* OS 상품 SEQ */
			PROS.product_name AS os_product_name	/* OS 상품 이름*/


		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_vm ORDVM	/* 가상서버 */
		ON PRD.order_product_seq = ORDVM.order_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDVM.project_id

		LEFT OUTER JOIN oss_vm VM		/* 가상서버 */
		ON VM.vm_uuid = ORDVM.vm_uuid

		LEFT OUTER JOIN oss_network NT		/* 네트워크 */
		ON NT.network_id = ORDVM.default_network_id

		LEFT OUTER JOIN bss_product PRDVM	/* 가상서버 상품 */
		ON PRDVM.product_seq=ORDVM.vm_product_seq

		LEFT OUTER JOIN bss_product PROS	/* OS 상품 */
		ON PROS.product_seq=ORDVM.os_product_seq

		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDVM.vm_catalog_seq
		AND CF.program_seq = ORDVM.vm_product_seq

		WHERE PRD.order_no =#{orderNo}
		AND PRD.product_category ='PRODCATE_VM'
	</select>

	<select id="detailBbsOrder" parameterType="CustomReqProductVO" resultType="CustomReqProductVO">
		SELECT
			BOP.order_product_seq
			, BOP.request_type
			, BOP.product_category
			, BO.order_user_id
			, BO.apprv_state
			, BOP.cloud_id
			, OC.cloud_type
		FROM
			bss_order_product BOP
		LEFT JOIN
			bss_order BO
		ON BOP.order_no = BO.order_no
		LEFT JOIN
			oss_cloud OC
		ON OC.cloud_id = BOP.cloud_id
		WHERE
			BOP.order_no = #{orderNo}
	</select>

  	<!-- 상품 신청현황 리스트1개 상세조회-->
    <select id="detail1" parameterType="CustomReqProductVO" resultType="CustomReqProductVO">
		SELECT
			BORD.order_no,
			BORD.order_user_id,
			US.user_name AS order_user_name,
			US.customer_id,
			CS.customer_name,
			BORD.apprv_state,
			CD.code_name AS apprv_state_name ,
			CONCAT(IFNULL(PRD.order_count,0), '건') AS order_count ,
			FORMAT(FLOOR(IFNULL(PRD.amount,0)),0) AS amount ,
			DATE_FORMAT(BORD.order_datetime, '%Y-%m-%d %H:%i') AS order_datetime

		FROM bss_order BORD
		LEFT OUTER JOIN cmm_user US
		ON US.user_id = BORD.order_user_id

		LEFT OUTER JOIN cmm_customer CS
		ON CS.customer_id = US.customer_id

		LEFT OUTER JOIN cmm_code CD
		ON CD.code_key_id = 'APPRV_STATE'
		AND CD.code_id = BORD.apprv_state

		LEFT OUTER JOIN (
					SELECT
						order_no,
						COUNT(order_no) AS order_count,
						SUM(amount) AS amount
					FROM bss_order_product
					GROUP BY order_no
				) PRD
		ON PRD.order_no = BORD.order_no
		where PRD.order_no=#{orderNo}
	</select>

	<!--상품 신청  상세 리스트 주문명-->
    <select id="orderView" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
		SELECT
			a.order_name
			, a.order_no
			, a.order_user_id
			, a.description
			, apprv_state
			, (SELECT  customer_name FROM cmm_customer WHERE customer_id =a.order_user_id) AS customer_name
			, (SELECT project_alias FROM oss_project WHERE project_id IN
			        ( SELECT project_id FROM bss_order_product_vm WHERE order_product_seq =a.order_no
			          UNION
			          SELECT project_id FROM bss_order_product_disk WHERE order_product_seq =a.order_no
			          UNION
			          SELECT project_id FROM bss_order_product_service WHERE order_product_seq =a.order_no )
			 )AS project_alias
		FROM
			bss_order a
		WHERE order_no =#{orderNo}
  	</select>

  	<select id="orderUserInfo" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
		SELECT
			BO.order_no
			, BO.order_name
			, BO.order_user_id
			, BO.description
			, BO.apprv_state
			, CU.user_name
		FROM
			bss_order BO
		LEFT JOIN cmm_user CU
		    ON BO.order_user_id = CU.user_id
		WHERE BO.order_no = #{orderNo}
  	</select>

 	<!-- 사용자 페이지 상품 신청현황 상세 리스트 승인멤버 조회 + 담당자 정보 2020.02.04 정희철-->
    <select id="approvalList" parameterType="java.util.Map" resultType="CustomReqProductVO">
    	<!-- 담당기본값이 필요 없어짐. 2020.05.27 장중일 -->
    	<!--
		SELECT
			'WF100000' AS step_id,
			order_no AS request_seq,
			'AFW0040' AS flow_id,
			'요청부서담당' AS step_name,
			0 AS step_level,
			'*' AS left_step_id,
			'*' AS right_step_id,
			'APPRV_COMPLETED' AS apprv_state,
			order_user_id AS apprv_user_id,
			user_name AS apprv_user_name,
			d.dept_code AS apprv_user_dept_code,
			d.dept_name AS apprv_user_dept_name,
			DATE_FORMAT(order_datetime, '%Y-%m-%d %H:%i') AS apprvDatetime,
			'' AS apprv_description,
			'Y' AS apprv_auth,
			order_user_id AS apprv_schedule_user_id,
			'' AS apprv_schedule_user_name,
		    '' AS apprv_schedule_user_dept_code,
		    '' AS apprv_schedule_user_dept_name
		FROM
			bss_order
		LEFT JOIN
			cmm_user u
		ON 	order_user_id = u.user_id
		LEFT JOIN
			cmm_department d
		ON u.dept_code = d.dept_code

		WHERE
			order_no =  #{orderNo}

    	UNION ALL
    	-->
    	SELECT
    		sa.step_id,
			sa.request_seq,
			sa.flow_id,
			sa.step_name,
			sa.step_level,
			sa.left_step_id,
			sa.right_step_id,
			sa.apprv_state,
			sa.apprv_user_id,
			sa.apprv_user_name,
			sa.apprv_user_dept_code,
	    	sa.apprv_user_dept_name,
			sa.apprvDatetime,
			sa.apprv_description,
			sa.apprv_auth,
		    sa.apprv_schedule_user_id,
		    cm.user_name AS apprv_schedule_user_name,
			cd.dept_code AS apprv_schedule_user_dept_code,
			cd.dept_name AS apprv_schedule_user_dept_name
    	FROM
    	(
	    	SELECT
				s.step_id,
				s.request_seq,
				s.flow_id,
				s.step_name,
				s.step_level,
				s.left_step_id,
				s.right_step_id,
				s.apprv_state,
				s.apprv_user_id,
				s.apprv_user_name,
				d.dept_code AS apprv_user_dept_code,
		    	d.dept_name AS apprv_user_dept_name,
				DATE_FORMAT(s.apprv_datetime, '%Y-%m-%d %H:%i') AS apprvDatetime,
				s.apprv_description,
				IF(ISNULL(a.apprv_schedule_user_id),'N','Y') AS apprv_auth,
			    IF(ISNULL(s.apprv_schedule_user_id), m.user_id, s.apprv_schedule_user_id) AS apprv_schedule_user_id
			FROM
				sr_approval_step s
			LEFT JOIN
				(SELECT step_id,request_seq, MAX(user_id) user_id FROM sr_approval_member GROUP BY request_seq, step_id) m
			ON (s.step_id = m.step_id AND s.request_seq = m.request_seq)
			LEFT JOIN
				(
				SELECT
					*
				FROM
					sr_approval_step
				WHERE
					apprv_state ='APPRV_PROCESSING'
					AND  request_seq = #{orderNo}
					<if test="userId != 'admin'">
					AND apprv_schedule_user_id = #{userId}
					</if>
				) a
			ON s.step_id = a.step_id
			LEFT JOIN
				cmm_user u
			ON s.apprv_user_id = u.user_id
			LEFT JOIN
				cmm_department d
			ON u.dept_code = d.dept_code
			WHERE
				s.request_seq = #{orderNo}
		) sa
		LEFT JOIN cmm_user cm
		ON sa.apprv_schedule_user_id = cm.user_id
		LEFT JOIN cmm_department cd
		ON cd.dept_code = cm.dept_code

		ORDER BY
			step_level ASC
	</select>

 	<!-- 관리자 페이지 상품 신청현황 상세 리스트 승인멤버 조회 + 담당자 정보 2020.02.04 정희철-->
    <select id="approvalList2" parameterType="java.util.Map" resultType="CustomReqProductVO">
    	<!--
		SELECT
			'WF100000' AS step_id,
			order_no AS request_seq,
			'AFW0040' AS flow_id,
			'요청부서담당' AS step_name,
			0 AS step_level,
			'*' AS left_step_id,
			'*' AS right_step_id,
			'APPRV_COMPLETED' AS apprv_state,
			order_user_id AS apprv_user_id,
			user_name AS apprv_user_name,
			d.dept_code AS apprv_user_dept_code,
			d.dept_name AS apprv_user_dept_name,
			DATE_FORMAT(order_datetime, '%Y-%m-%d %H:%i') AS apprvDatetime,
			'' AS apprv_description,
			'Y' AS apprv_auth,
			order_user_id AS apprv_schedule_user_id,
			'' AS apprv_schedule_user_name,
		    '' AS apprv_schedule_user_dept_code,
		    '' AS apprv_schedule_user_dept_name
		FROM
			bss_order
			LEFT JOIN cmm_user u
			ON 	order_user_id = u.user_id
			LEFT JOIN cmm_department d
			ON u.dept_code = d.dept_code

		WHERE
			order_no =  #{orderNo}

    	UNION ALL
    	-->
    	SELECT
    		sa.step_id,
			sa.request_seq,
			sa.flow_id,
			sa.step_name,
			sa.step_level,
			sa.left_step_id,
			sa.right_step_id,
			sa.apprv_state,
			sa.apprv_user_id,
			sa.apprv_user_name,
			sa.apprv_user_dept_code,
	    	sa.apprv_user_dept_name,
			sa.apprvDatetime,
			sa.apprv_description,
			sa.apprv_auth,
		    sa.apprv_schedule_user_id,
		    cm.user_name AS apprv_schedule_user_name,
			cd.dept_code AS apprv_schedule_user_dept_code,
			cd.dept_name AS apprv_schedule_user_dept_name
    	FROM
    	(
	    	SELECT
				s.step_id,
				s.request_seq,
				s.flow_id,
				s.step_name,
				s.step_level,
				s.left_step_id,
				s.right_step_id,
				s.apprv_state,
				s.apprv_user_id,
				s.apprv_user_name,
				d.dept_code AS apprv_user_dept_code,
		    	d.dept_name AS apprv_user_dept_name,
				DATE_FORMAT(s.apprv_datetime, '%Y-%m-%d %H:%i') AS apprvDatetime,
				s.apprv_description,
				IF(ISNULL(a.apprv_schedule_user_id),'N','Y') AS apprv_auth,
			    s.apprv_schedule_user_id
			FROM
				sr_approval_step s
			LEFT JOIN
				(SELECT step_id,request_seq, MAX(user_id) user_id FROM sr_approval_member GROUP BY request_seq, step_id) m
			ON (s.step_id = m.step_id AND s.request_seq = m.request_seq)
			LEFT JOIN
				(
				SELECT
					*
				FROM
					sr_approval_step
				WHERE
					apprv_state ='APPRV_PROCESSING'
					AND  request_seq = #{orderNo}
					<if test="userId != 'admin'">
					AND apprv_schedule_user_id = #{userId}
					</if>
				) a
			ON s.step_id = a.step_id
			LEFT JOIN
				cmm_user u
			ON s.apprv_user_id = u.user_id
			LEFT JOIN
				cmm_department d
			ON u.dept_code = d.dept_code
			WHERE
				s.request_seq = #{orderNo}
		) sa
		LEFT JOIN cmm_user cm
		ON sa.apprv_schedule_user_id = cm.user_id
		LEFT JOIN cmm_department cd
		ON cd.dept_code = cm.dept_code
		ORDER BY
			step_level ASC
	</select>

<!--  	   	상품 신청현황 상세 리스트 승인멤버 유저 아이디 조회-->
    <select id="approvalUserId" parameterType="CustomReqProductVO" resultType="CustomReqProductVO">
			select
				sa.user_id
				,sa.step_id
				,cu.user_name
			from
				sr_approval_member  sa, cmm_user cu
	 		where
				request_seq = #{orderNo}
			AND
				flow_id='AFW0040'
			AND
				sa.user_id = cu.user_id

	</select>
 <!--   	상품 미승인 신청현황 수정-->
  	<update id="rejectedUpdate" parameterType="CustomReqCustomerVO" >
  		update
  			bss_order
  		set
			apprv_state = 'APPRV_REJECTED'
  		where
  			order_no = #{requestSeq}

  	</update>
 <!--   	상품 신규 마지막 승인 신청현황 수정-->
  	<update id="newUpdate" parameterType="CustomReqCustomerVO" >
  		update
  			bss_order
  		set
			apprv_state = 'APPRV_COMPLETED'
  		where
  			order_no = #{requestSeq}

  	</update>


	<update id="reqProjectRejectedUpdate" parameterType="CustomReqCustomerVO" >
  	<!-- -01작성중,02진행중,03반려,04처리완료 -->
		UPDATE
	  		req_project
		SET
			status_flag = '03'
	  	WHERE
	  		req_project_seq = #{requestSeq}
	  </update>

   	<!-- 상품 마지막 승인 신청 내용입력 -->
    <insert id="insertOssVm" parameterType="CustomReqProductVO" >
    	INSERT INTO oss_vm
		(
			vm_uuid,
			project_id,
			hostname,
			hostname_alias,
			flavor_id,
			vcpus,
			mem_gb,
			disk_gb,
			image_id,
			volume_type,
			az_name,
			vm_product_seq,
			os_product_seq,
			vm_catalog_seq,
			reg_datetime,
			reg_user_id,
			del_flag,
			create_datetime
		)
		VALUES
		(
			#{vmUuid},
			#{projectId},
			#{hostname},
			#{hostnameAlias},
			#{flavorId},
			#{vcpus},
			#{memGb},
			#{diskGb},
			#{imageId},
			#{volumeType},
			#{azName},
			#{vmProductSeq},
			#{osProductSeq},
			#{vmCatalogSeq},
			NOW(),
			#{orderUserId},
			'N',
			#{createDatetime}
		)
  	</insert>

	<insert id="insertOssVmNetwork" parameterType="CustomReqProductVO" >
		INSERT INTO oss_vm_network
		(
			network_id
			, vm_uuid
			, port_network_id
			, port_backup_network_id
		)
		value
		(
			#{networkId}
			, #{vmUuid}
			, #{portNetworkId}
			, #{portBackupNetworkId}
		)
	</insert>

	<!-- <insert id="insertOssPort" parameterType="BatchOssPortVO" >
		INSERT INTO oss_port(
			port_id,
			port_name,
			fixed_ips,
			subnet_id,
			mac_address,
			project_id,
			network_id,
			device_owner,
			device_id,
			reg_datetime,
			delete_flag
		)
		value
		(
			#{portId},
			#{portName},
			#{fixedIps},
			#{subnetId},
			#{macAddress},
			#{projectId},
			#{networkId},
			#{deviceOwner},
			#{deviceId},
			NOW(),
			'N'
		)
	</insert> -->

	<!-- <update id="deleteOssPort" parameterType="CustomReqProductVO" >
		UPDATE
			oss_port
		SET
			delete_flag = 'Y'
			, mod_datetime = NOW()
			, mod_user_id = #{orderUserId}
		WHERE
			port_id = #{portNetworkId}
			OR port_id = #{portBackupNetworkId}
  	</update> -->
<!--
    <update id="updateOssVm" parameterType="CustomReqProductVO" >
		UPDATE oss_vm
			SET
				vcpus = #{vcpus}
				, mem_gb = #{memGb}
				, mod_datetime = NOW()
				, mod_user_id = #{orderUserId}
		WHERE vm_uuid = #{vmUuid}
  	</update>
-->
<!--
  	<update id="deleteOssVm" parameterType="CustomReqProductVO" >
		UPDATE
			oss_vm
		SET
			del_flag = 'Y'
			, mod_datetime = NOW()
			, mod_user_id = #{orderUserId}
		WHERE
			vm_uuid = #{vmUuid}
  	</update>
-->
<!--
  	<insert id="insertOssDisk" parameterType="CustomReqProductVO" >
		INSERT INTO oss_disk
		(
			disk_id
			, project_id
			, vm_uuid
			, disk_alias
			, size_gb
			, create_datetime
			, reg_datetime
			, reg_user_id
			, del_flag
			, hourly_flag
			, description
			, disk_catalog_seq
			, disk_product_seq
			, volume_type
			, vmdk_file
		)
		value
		(
			#{diskId}
			, #{projectId}
			, #{vmUuid}
			, #{diskName}
			, #{diskGb}
			, #{createDatetime}
			, NOW()
			, #{orderUserId}
			, 'N'
			, #{hourlyFlag}
			, #{description}
			, #{diskCatalogSeq}
			, #{diskProductSeq}
			, #{diskType}
			, #{vmdkFile}
		)
	</insert>
-->
<!--
  	<update id="updateOssDisk" parameterType="CustomReqProductVO" >
		UPDATE
			oss_disk
		SET
			size_gb = #{diskGb}
			, mod_datetime = NOW()
			, mod_user_id = #{orderUserId}
		WHERE
			disk_id = #{diskId}
  	</update>
-->
<!--
  	<update id="deleteOssDisk" parameterType="CustomReqProductVO" >
		UPDATE
			oss_disk
		SET
			del_flag = 'Y'
			, mod_datetime = NOW()
			, mod_user_id = #{orderUserId}
		WHERE
			disk_id = #{diskId}
  	</update>
-->
  	<!--미승인 프로젝트 신청  리스트-->
    <!-- <select id="getProjectList" resultType="CustomReqProductVO" >
		SELECT
			req_project_seq,
			(SELECT company_id FROM cmm_customer WHERE customer_id =a.customer_id)AS company_id,
			project_name,
			project_alias,
			project_description,
			a.customer_id,
			reg_datetime	,
			apprv_state,
			request_type
		FROM
			req_project a
		where
			apprv_state <![CDATA[<>]]> 'APPRV_COMPLETED'
  	</select> -->

  	 <!-- 프로젝트 신청  내용-->
    <!-- <select id="getProductView" resultType="CustomReqProductVO">
		SELECT
			*
		FROM
			bss_order
		where
			order_no = #{orderNo}
  	</select> -->

	<!-- 프로젝트 신청 선택한 네트워크 리스트 -->
<!--
    <select id="getProjectNetSlist" resultType="CustomReqProductVO">
		SELECT
			req_network_seq,
			net_dflt_kind,
			network_name,
			network_alias,
			req_project_seq
		FROM
			req_project_network
		where
			del_flag='N'
			and req_project_seq = #{reqProjectSeq}
  	</select>
-->
<!--
    <update id="setProjectForminsert" parameterType="CustomReqProductVO" >
    	INSERT INTO req_project
		(
			req_project_seq,
			project_name,
			project_alias,
			project_description,
			customer_id,
			apprv_state,
			reg_datetime,
			reg_user_id
		)
		VALUES
		(
			#{reqProjectSeq},
			#{projectName},
			#{projectAlias},
			#{projectDescription},
			#{customerId},
			'APPRV_PROCESSING',
			NOW(),
			#{regUserId}
		)
  	</update>
-->
<!--
    <update id="setProjectFormEdit" parameterType="CustomReqProductVO" >
		UPDATE
			req_project
		SET
			project_name = #{projectName},
			project_alias = #{projectAlias},
			project_description = #{projectDescription},
			mod_datetime = NOW(),
			mod_user_id = #{modUserId}
		WHERE
			req_project_seq = #{reqProjectSeq}
  	</update>
-->
  	<!-- 프로젝트 신청 내용수정시 네트워크 초기화 -->
<!--
    <update id="setProjectNetdel" parameterType="CustomReqProductVO" >
		UPDATE
			req_project_network
		SET
			del_flag = 'Y'
		WHERE
			req_project_seq = #{reqProjectSeq}
  	</update>
-->
  	<!--네트워크 리스트-->
<!--
    <select id="getProjectNetList" resultType="CustomReqProductVO">
		SELECT
			code_id,
			code_name
		FROM
			cmm_code
		where
			code_key_id=#{codeKeyId}
			and parent_code_id=#{codeKeyId}
		order by
			code_id asc
  	</select>
-->
  	<!-- 네트워크 신청 내용입력 -->
<!--
    <update id="setProjectNetinsert" parameterType="CustomReqProductVO" >
		INSERT INTO req_project_network
		(
			req_network_seq,
			net_dflt_kind,
			req_project_seq,
			reg_datetime
		)
		VALUES
		(
			#{reqNetworkSeq},
			#{netDfltKind},
			#{reqProjectSeq},
			NOW()
		)
  	</update>
-->
  	<!-- 승인모델 단계  리스트 -->
<!--
    <select id="getApprovalModelSteplist" resultType="CustomReqCustomerVO">
		SELECT
			step_id,
			model_id,
			step_name,
			step_level,
			left_step_id,
			right_step_id
		FROM
			approval_model_step
		where
			model_id = (SELECT model_id FROM sr_approval_flow WHERE flow_id='AFW0020')
  	</select>
-->
  	<!-- 프로젝트신청 내용입력후  sr_approval_step(서비스 요청 승인단계입력)D-->
<!--
    <update id="setSrApprovalStepinsert" parameterType="CustomReqCustomerVO" >
		INSERT INTO sr_approval_step
		(
			step_id,
			request_seq,
			flow_id,
			step_name,
			step_level,
			left_step_id,
			right_step_id,
			apprv_state,
			apprv_datetime
		)
		VALUES
		(
			#{stepId},
			#{requestSeq},
			'AFW0020',
			#{stepName},
			#{stepLevel},
			#{leftStepId},
			#{rightStepId},
			'APPRV_PROCESSING',
			NOW()
		)
  	</update>
-->
  	<!-- 프로젝트신청 내용입력후  sr_approval_member(서비스 요청 승인 구성원 입력)-->
<!--
    <update id="setSrApprovalMemberinsert" parameterType="CustomReqCustomerVO" >
		INSERT INTO sr_approval_member
			(
				step_id,
				request_seq,
				flow_id,
				user_id,
				apprv_auth_flag,
				mail_recv_flag,
				sms_recv_flag,
				push_recv_flag
			)
		VALUES
			(
				#{stepId},
				#{requestSeq},
				'AFW0020',
				#{userId},
				#{apprvAuthFlag},
				#{mailRecvFlag},
				#{smsRecvFlag},
				#{pushRecvFlag}
			)
  	</update>
-->
  	<!-- 승인모델 단계 구성원 리스트 -->
<!--
    <select id="getApprovalModelMemberlist" resultType="CustomReqCustomerVO">
		SELECT
			step_id,
			user_id,
			apprv_auth_flag,
			mail_recv_flag,
			sms_recv_flag,
			push_recv_flag
		FROM
			approval_model_member
  	</select>
-->
  	 <!-- 프로젝트 승인 step 리스트 내용-->
<!--
    <select id="getProjectAppSteplist" resultType="CustomReqCustomerVO">
		SELECT
			step_id,
			request_seq,
			flow_id,
			step_name,
			step_level,
			left_step_id,
			right_step_id,
			apprv_state,
			apprv_user_id,
			apprv_user_name,
			DATE_FORMAT(apprv_datetime, '%Y-%m-%d %H:%i') AS apprvDatetime,
			apprv_description
		FROM
			sr_approval_step
		where  request_seq=#{reqProjectSeq} ORDER BY step_level ASC
  	</select>
-->
  	<!--승인 프로젝트 신청  리스트-->
<!--
    <select id="getOkProjectList" resultType="CustomReqProductVO">
		SELECT
			project_id,
			project_name,
			project_alias,
			customer_id,
			project_manager_id,
			reg_datetime
		FROM
			oss_project
	  WHERE delete_flag = 'N'
  	</select>
-->
  	<!-- 프로젝트 신청  내용-->
<!--
    <select id="getOkProjectView" resultType="CustomReqProductVO">
		SELECT
			a.project_id,
			a.project_name,
			a.project_alias,
			a.customer_id,
			a.project_manager_id,
			a.reg_datetime,
			(SELECT user_name FROM cmm_user WHERE user_id=a.project_manager_id) AS user_name
		FROM
			(SELECT * FROM oss_project WHERE delete_flag = 'N') a
		WHERE 	a.project_id=#{projectId}
  	</select>
-->
  	<!--프로젝트 회원사 멤버 리스트-->
<!--
    <select id="getCustomerMemberList" resultType="CustomReqUserVO">
		SELECT
			a.user_id,
			a.user_name,
			a.company_id,
			a.customer_id,
			a.user_phone,
			a.user_tel,
			a.user_mail,
			a.sms_recv_flag,
			a.del_flag,
			(SELECT company_name FROM company WHERE company_id=a.company_id) AS company_name
 			(SELECT company_name FROM req_customer WHERE customer_id=a.customer_id) AS company_name
		FROM
			cmm_user a
		where
			a.del_flag <![CDATA[<>]]> 'Y'
		and
			a.customer_id=#{customerId}
  	</select>
-->

	<!-- 프로젝트 PM 업데이트-->
<!--
    <update id="setProjectPmupdate" parameterType="CustomReqProductVO" >
		UPDATE oss_project
			SET
				project_manager_id = #{userId}
			WHERE
				project_id = #{projectId}
  	</update>
-->

  	<!--프로젝트  회원사 멤버 검색 리스트-->
<!--
    <select id="getCustomerMemberSerachList" resultType="CustomReqUserVO">
		SELECT
			a.user_id,
			a.user_name,
			a.company_id,
			a.customer_id,
			a.user_phone,
			a.user_tel,
			a.user_mail,
			a.sms_recv_flag,
			a.del_flag,
			(SELECT company_name FROM company WHERE company_id=a.company_id) AS company_name
		FROM
			cmm_user a
		where a.del_flag <![CDATA[<>]]> 'Y' and a.customer_id=#{customerId} and a.user_name LIKE CONCAT('%',#{userName},'%')
  	</select>
-->
  	<!-- PM 설정 관련 start  -->



  	<!-- PM 설정 관련 end  -->


<!-- 	  	프로젝트 마지막 승인 신청현황 등록
  	<insert id="insert" parameterType="CustomReqProductVO" >
  	insert into oss_project
		(project_id,
		company_id,
		customer_id,
		project_manager_id,
		project_name,
		project_alias,
		reg_datetime,
		reg_user_id,
		delete_flag
	)
	VALUES
		(
		#{projectId},
		#{companyId},
		#{customerId},
		#{projectManagerId},
		#{projectName},
		#{projectAlias},
		now(),
		#{regUserId},
		#{delFlag}
	)
  	</insert>
-->
 <!--   	프로젝트 해지 마지막 승인 신청현황 수정
  	<update id="update" parameterType="CustomReqProductVO" >
  		update
  			req_project
  		set
			apprv_state = 'APPRV_COMPLETED',
			del_flag='Y'
  		where
  			req_project_seq = #{reqProjectSeq}
		and
			 request_type <![CDATA[=]]> 'REQTYPE_EXPR'
  	</update> -->
 <!--   	프로젝트 해지 마지막 승인 신청현황 수정-->
  	<!-- <update id="ossUpdate" parameterType="CustomReqProductVO" >
  		update
  			oss_project
  		set
			delete_flag = 'Y'
  		where
  			project_id = #{projectId}

  	</update> -->

	<!--   	프로젝트 승인 스텝정보 수정-->
	<update id="stepUpdate" parameterType="CustomReqProductVO" >
	  		UPDATE
	  			sr_approval_step
	  		SET
	  		apprv_description=#{apprvDescription},
				apprv_state = #{apprvState},
				apprv_datetime = NOW(),
				apprv_user_name = #{apprvUserName},
				apprv_user_id = #{apprvUserId}
	  		WHERE
	  			request_seq = #{requestSeq}
	  		AND
	  			step_level =#{stepLevel}
	</update>

	<update id="reqProjectUpdate" parameterType="CustomReqProductVO" >

	       UPDATE req_project SET
				        project_name = #{reqProjectName}
			           ,req_project_description = #{reqProjectDescription}
	       WHERE req_project_seq = #{requestSeq}

	</update>


	<!--   	프로젝트 승인 스텝정보 수정-->
	<update id="stepUpdateUser" parameterType="CustomReqProductVO" >
	  		UPDATE
	  			sr_approval_step
	  		SET
	  		apprv_description=#{apprvDescription},
				apprv_state = #{apprvState},
				apprv_datetime = NOW()
				<!-- apprv_user_name = #{apprvUserName}, -->
				<!-- apprv_user_id = #{apprvUserId}  -->
	  		WHERE
	  			request_seq = #{requestSeq}
	  		AND
	  			step_level =#{stepLevel}
	</update>

	<select id="getNetworkList" parameterType="String" resultType="String">
		SELECT
			shared_network
		FROM bss_order_product_vm_network
		WHERE order_product_seq = #{OrderProductSeq}
	</select>


   	<!--장바구니 로드밸런서 주문 리스트-->
    <select id="getReqLbOrderList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
    <![CDATA[
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			ORDLB.on_demand_flag,	/* 즉시희망 여부*/
			ORDLB.apply_datetime,	/* 서비스 희망 일시 */
			ORDLB.hourly_flag,	/* 시간단위 과금여부 */
			PJ.project_id  AS project_id,	/* 프로젝트 ID */
			(select user_name from cmm_user where user_id = ORDLB.work_user_id) AS workUserName,
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			ORDLB.description  	AS description,	/* 비고 */
			ORDLB.loadbalancer_catalog_seq,	/* 로드밸런서  카탈로그 SEQ */
			ORDLB.loadbalancer_product_seq,	/* 로드밸런서  상품 SEQ */
			PRDLB.product_name AS loadbalancer_product_name,	 /* 로드밸런서  상품 이름 */
			file_id AS image_name,		/* 이미지 이름 */
			CONCAT(CF.file_path,CF.file_id) AS image_path,	/* 가상서버 이미지 경로 */
			ORDLB.loadbalancer_name ,	/* 로드밸런서 이름 */
			ORDLB.loadbalancer_ea, 		/* 로드밸런서 수량 */
			ORDLB.protocol,		/* PROTOCLO */
			PRO.code_name	AS protocol_name, /* PROTOCLO 이름*/
			ORDLB.method,		/* METHOD */
			ORDLB.ip,
			ORDLB.port,
			MET.code_name 	AS method_name, /* METHOD 이름*/
			ORDLB.monitor_type,		/* MORITOR TYPE */
			MORTY.code_name AS 		monitor_type_name, /* MORITOR TYPE 이름*/
			(
				SELECT GROUP_CONCAT(LBVM.hostname SEPARATOR '<br>') FROM
				(
					SELECT OPLBVM.order_product_seq, OPLBVM.vm_uuid, IFNULL(VM.hostname_alias, '-') AS hostname
					FROM bss_order_product_loadbalancer_vm OPLBVM
					LEFT OUTER JOIN oss_vm VM
					ON OPLBVM.vm_uuid = VM.vm_uuid
				) LBVM
				WHERE LBVM.order_product_seq = ORDLB.order_product_seq GROUP BY LBVM.order_product_seq
			) AS loadbalancer_vm /* 로드밸런서 선택한 VM */

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_loadbalancer ORDLB /* 로드밸런서 */
		ON PRD.order_product_seq = ORDLB.order_product_seq

		LEFT OUTER JOIN bss_product PRDLB		/* 로드밸런서  상품 */
		ON PRDLB.product_seq= ORDLB.loadbalancer_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_box_id =ORDLB.project_id


		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category


		LEFT OUTER JOIN cmm_code PRO		/* PROTOCLO */
		ON PRO.code_key_id ='PROTOCOL'
		AND PRO.code_id = ORDLB.protocol

		LEFT OUTER JOIN cmm_code MET		/* METHOD */
		ON MET.code_key_id ='METHOD'
		AND MET.code_id = ORDLB.method

		LEFT OUTER JOIN cmm_code MORTY		/* MORITOR TYPE */
		ON MORTY.code_key_id ='MONITOR_TYPE'
		AND MORTY.code_id = ORDLB.monitor_type

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDLB.loadbalancer_catalog_seq
		AND CF.program_seq = ORDLB.loadbalancer_product_seq

		WHERE PRD.order_no =#{orderNo}
		AND PRD.product_category ='ITEMCATE_LOADBALANCER'
		GROUP BY PJ.project_box_id
	]]>
  	</select>

  	<!--장바구니 로드밸런서 주문 리스트-->
    <select id="getReqSnOrderList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
    <![CDATA[
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			ORDSN.on_demand_flag,	/* 즉시희망 여부*/
			ORDSN.apply_datetime,	/* 서비스 희망 일시 */
			ORDSN.hourly_flag,	/* 시간단위 과금여부 */
			(select user_name from cmm_user where user_id = ORDSN.work_user_id) AS workUserName,
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			ORDSN.description  	AS description,	/* 비고 */
			ORDSN.snapshot_catalog_seq,	/* 로드밸런서  카탈로그 SEQ */
			ORDSN.snapshot_product_seq,	/* 로드밸런서  상품 SEQ */
			PRDLB.product_name AS snapshot_product_name,	 /* 로드밸런서  상품 이름 */
			file_id AS image_name,		/* 이미지 이름 */
			CONCAT(CF.file_path,CF.file_id) AS image_path,	/* 가상서버 이미지 경로 */
			ORDSN.snapshot_name,
			OD.disk_alias,
			OV.hostname,
			PJ.project_id  AS project_id

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_snapshot ORDSN /* 로드밸런서 */
		ON PRD.order_product_seq = ORDSN.order_product_seq

		LEFT OUTER JOIN bss_product PRDLB		/* 로드밸런서  상품 */
		ON PRDLB.product_seq= ORDSN.snapshot_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_box_id =ORDSN.project_id

		LEFT JOIN oss_disk OD
		ON ORDSN.disk_id = OD.disk_id

		LEFT JOIN oss_vm OV
		ON OV.vm_uuid = OD.vm_uuid

		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDSN.snapshot_catalog_seq
		AND CF.program_seq = ORDSN.snapshot_product_seq

		WHERE PRD.order_no =#{orderNo}
		AND PRD.product_category ='ITEMCATE_SNAPSHOT'
		GROUP BY PJ.project_box_id
	]]>
  	</select>

  	<!--장바구니 어플리케이션 주문 리스트-->
    <select id="getReqAppOrderList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
    <![CDATA[
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			ORDAPP.description  	AS description,	/* 비고 */
			ORDAPP.template_catalog_seq,	/* 로드밸런서  카탈로그 SEQ */
			ORDAPP.template_product_seq,	/* 로드밸런서  상품 SEQ */
			PRDLB.product_name AS template_product_name,	 /* 로드밸런서  상품 이름 */
			file_id AS image_name,		/* 이미지 이름 */
			CONCAT(CF.file_path,CF.file_id) AS image_path,	/* 가상서버 이미지 경로 */
			ORDAPP.app_name,
			PJ.project_id  AS project_id

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		INNER JOIN bss_order_product_app ORDAPP
		ON PRD.order_product_seq = ORDAPP.order_product_seq

		LEFT OUTER JOIN bss_product PRDLB
		ON PRDLB.product_seq= ORDAPP.template_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDAPP.project_id
		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDAPP.template_catalog_seq
		AND CF.program_seq = ORDAPP.template_product_seq

		WHERE PRD.order_no =#{orderNo}
		AND PRD.product_category ='PRODCATE_APP'
		GROUP BY PJ.project_box_id
	]]>
  	</select>

	<!-- 개발환경 신청 관리자 승인 현황 조회 쿼리 -->
  	<select id="getReqEnvOrderList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
  	<![CDATA[
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			PRDLB.product_name AS template_product_name,	 /* 로드밸런서  상품 이름 */
			file_id AS image_name,		/* 이미지 이름 */
			CONCAT(CF.file_path,CF.file_id) AS image_path,	/* 가상서버 이미지 경로 */
			PJ.project_id  AS project_id

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		INNER JOIN bss_order_product_env ORDENV
		ON PRD.order_product_seq = ORDENV.order_product_seq

		LEFT OUTER JOIN bss_product PRDLB
		ON PRDLB.product_seq= ORDENV.env_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_box_id = ORDENV.project_box_id

		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'

		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDENV.env_catalog_seq
		AND CF.program_seq = ORDENV.env_product_seq

		WHERE PRD.order_no =#{orderNo}
		AND PRD.product_category ='PRODCATE_ENV'
		AND PJ.env_type ='DEV'
		GROUP BY PJ.project_box_id
	]]>
  	</select>

  	<!-- 개발/운영 관리자 승인현황 조회 쿼리 -->
  	<select id="getReqPrdOrderList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
  	<![CDATA[
  		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			PRDLB.product_name AS template_product_name,	 /* 로드밸런서  상품 이름 */
			file_id AS image_name,		/* 이미지 이름 */
			CONCAT(CF.file_path,CF.file_id) AS image_path,	/* 가상서버 이미지 경로 */
			PJ.project_id  AS project_id

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		INNER JOIN bss_order_product_deploys ORDPRD
		ON PRD.order_product_seq = ORDPRD.order_product_seq

		LEFT OUTER JOIN bss_product PRDLB
		ON PRDLB.product_seq= ORDPRD.deploys_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id = ORDPRD.project_id

		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'

		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDPRD.deploys_catalog_seq
		AND CF.program_seq = ORDPRD.deploys_product_seq

		WHERE PRD.order_no = #{orderNo}
		AND PRD.product_category ='PRODCATE_APP'
		GROUP BY PJ.project_box_id
  	]]>
  	</select>

  	<select id="bssEnvUserList" parameterType="CustomReqProductVO" resultType="CustomReqProductVO">
  		SELECT
			a.order_product_seq,
			a.env_user_id,
			a.env_user_name,
			a.env_user_password,
			a.env_user_email,
			a.env_access_level,
			a.reg_datetime,
			a.reg_user_id,
			a.mod_datetime,
			a.mod_user_id,
			a.del_flag,
			a.env_user_group_role,
			b.code_name
		FROM
			bss_order_product_env_user a
		LEFT JOIN cmm_code b
		ON a.env_access_level = b.code_value
		AND b.code_key_id = 'ENV_USER_ROLE'
		WHERE order_product_seq = #{orderProductSeq}
  	</select>

	   	<!--IP 주문 리스트-->
    <select id="getReqIpOrderList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			ORDIP.vm_uuid,			/* 가상서버 UUID */
			ORDIP.on_demand_flag,	/* 즉시희망 여부*/
			ORDIP.apply_datetime,	/* 서비스 희망 일시 */
			ORDIP.hourly_flag,	/* 시간단위 과금여부 */
			ORDIP.project_id  AS project_id,	/* 프로젝트 ID */
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			ORDIP.description  	AS description,	/* 비고 */
			VM.hostname,			/* 가상서버 호스트명 */
			VM.hostname_alias,		/* 가상서버 한글 */
			ORDIP.publicip_product_seq,	/* 공인IP 상품 SEQ */
			PRDIP.product_name AS loadbalancer_product_name,	 /* 공인IP 상품 이름 */
			ORDIP.publicip_ea, /* 공인IP 수량 */
			file_id AS image_name,		/* 이미지 이름 */
			(select user_name from cmm_user where user_id = ORDIP.work_user_id) AS workUserName

		FROM bss_order_product PRD

		LEFT OUTER JOIN  bss_order BSSORD
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_publicip ORDIP
		ON PRD.order_product_seq = ORDIP.order_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDIP.project_id

		LEFT OUTER JOIN bss_product PRDIP		/*  공인IP  상품 */
		ON PRDIP.product_seq= ORDIP.publicip_product_seq

		LEFT OUTER JOIN oss_vm VM		/* 가상서버 */
		ON VM.vm_uuid = ORDIP.vm_uuid

		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDIP.publicip_catalog_seq
		AND CF.program_seq = ORDIP.publicip_product_seq

		WHERE PRD.order_no =#{orderNo}
		AND PRD.product_category ='PRODCATE_PUBLICIP'
  	</select>

	<!--NAS 주문 리스트-->
    <select id="getReqNasOrderList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
		SELECT
			BSSORD.order_user_id,		/* 신청자 ID*/
			BSSORD.order_name,		/* 주문서 명*/
			PRD.order_product_seq, 		/* 주문서 상품 고유 순번*/
			PRD.order_no,			/* 주문서 번호*/
			PRD.request_type,		/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,		/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,		/* 주문 요약*/
			PRD.hourly_flag,		/* 시간 단위 과금 여부*/
			PRD.amount,			/* 주문 금액*/
			ORDNAS.on_demand_flag,		/* 즉시희망 여부*/
			ORDNAS.apply_datetime,		/* 서비스 희망 일시 */
			ORDNAS.hourly_flag,		/* 시간단위 과금여부 */
			ORDNAS.project_id,
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			PJ.project_box_id,
			ORDNAS.description  	AS description,	/* 비고 */
			ORDNAS.nas_catalog_seq,		/* NAS  카탈로그  SEQ */
			ORDNAS.nas_product_seq,		/* NAS  상품 SEQ */
			PRDNAS.product_name,		/* NAS 상품 이름 */
			file_id AS image_name,		/* 이미지 이름 */
			NASVM.nas_vm_list,
			CONCAT(CF.file_path,CF.file_id) AS image_path,	/* NAS 이미지 경로 */
			ORDNAS.nas_name,		/* NAS이름 */
			ORDNAS.nas_alias,		/* NAS ALIAS */
			ORDNAS.nas_option,		/* NAS OPTION */
			ORDNAS.nas_file_system_path,
			ORDNAS.default_network_id,
			ORDNAS.default_network_name,
			ORDNAS.default_network_alias,
			ORDNAS.default_network_ip,
			ORDNAS.az_name,
			CASE PRD.request_type
			WHEN 'REQTYPE_NEW' THEN CAST(ORDNAS.nas_gb AS VARCHAR)
			WHEN 'REQTYPE_CHANGE' THEN CONCAT(CONCAT(CAST(ORDNAS.before_nas_gb AS VARCHAR),  CAST('->' AS VARCHAR)), CAST(ORDNAS.nas_gb AS VARCHAR))
			WHEN 'REQTYPE_EXPR' THEN CAST(ORDNAS.nas_gb AS VARCHAR)
			ELSE CAST(0 AS VARCHAR)
			END AS nas_change, /* NAS용량 */
			ORDNAS.nas_gb,			/* NAS용량 */
			OC.cloud_name,
			OC.cloud_type,
			OC.cloud_id,
			(select user_name from cmm_user where user_id = ORDNAS.work_user_id) AS workUserName

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
			ON PRD.order_no = BSSORD.order_no
		LEFT OUTER JOIN bss_order_product_nas ORDNAS	/* NAS */
			ON PRD.order_product_seq = ORDNAS.order_product_seq
		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
			ON PJ.project_id =ORDNAS.project_id
		LEFT OUTER JOIN bss_product PRDNAS	/* 블록 디스크 상품 */
			ON PRDNAS.product_seq=ORDNAS.nas_product_seq
		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
			ON REQCD.code_key_id ='REQUEST_TYPE'
			AND REQCD.code_id = PRD.request_type
		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
			ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
			AND REQCAT.code_id = PRD.product_category
		LEFT OUTER JOIN cmm_file CF
			ON CF.program_name = ORDNAS.nas_catalog_seq
			AND CF.program_seq = ORDNAS.nas_product_seq
		LEFT OUTER JOIN	(
			select		GROUP_CONCAT(OVLIST.hostname_alias SEPARATOR ', ') as nas_vm_list
					,   ORDNASVMSUB.order_product_seq
			from		bss_order_product_nas_vm ORDNASVMSUB
			LEFT JOIN oss_vm OVLIST
				ON		ORDNASVMSUB.vm_uuid = OVLIST.vm_uuid
			LEFT JOIN bss_order_product PRD
				ON		ORDNASVMSUB.order_product_seq = PRD.order_product_seq
			WHERE		PRD.order_no = #{orderNo}
			GROUP BY		ORDNASVMSUB.order_product_seq ) NASVM
			ON NASVM.order_product_seq = PRD.order_product_seq
		LEFT OUTER JOIN oss_cloud OC
			ON PJ.cloud_id = OC.cloud_id
		WHERE PRD.order_no =#{orderNo}
		AND PRD.product_category ='PRODCATE_NAS'
  	</select>
   	<!-- 블록 디스크 주문 리스트-->
    <select id="getReqDiskOrderList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
		SELECT
		    OC.cloud_name,
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			ORDDISK.on_demand_flag,	/* 즉시희망 여부*/
			ORDDISK.apply_datetime,	/* 서비스 희망 일시 */
			ORDDISK.hourly_flag,	/* 시간단위 과금여부 */
			PJ.project_id,			/* 프로젝트 ID */
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			ORDDISK.vm_uuid,		/* 가상서버 UUID */
			ORDDISK.description  	AS description,	/* 비고 */
			VM.hostname,			/* 가상서버 호스트명 */
			VM.hostname_alias,		/* 가상서버 한글 */
			ORDDISK.disk_name, 		/* 디스크 이름 */
			ORDDISK.disk_gb, 		/* 디스크 용량 */

			CASE PRD.request_type
			WHEN 'REQTYPE_NEW' THEN CAST(ORDDISK.disk_gb AS VARCHAR)
			WHEN 'REQTYPE_CHANGE' THEN CONCAT(CONCAT(CAST(ORDDISK.before_disk_gb AS VARCHAR),  CAST('->' AS VARCHAR)), CAST(ORDDISK.disk_gb AS VARCHAR))
			WHEN 'REQTYPE_EXPR' THEN CAST(ORDDISK.disk_gb AS VARCHAR)
			ELSE CAST(0 AS VARCHAR)
			END AS disk_gb2, /* 디스크 용량*/

			ORDDISK.before_disk_gb,

			ORDDISK.disk_catalog_seq,	/* 디스크 카탈로그 SEQ */
			ORDDISK.disk_product_seq,	/* 디스크 상품 SEQ */
			PRDDISK.product_name,		/* 디스크 상품 이름 */
			file_id AS image_name,		/* 이미지 이름 */
			CONCAT(CF.file_path,CF.file_id) AS image_path,	/* 디스크 이미지 경로 */
			PQ.provisioning_status,
			PQ.provisioning_status_message,
			PQ.end_description

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_disk ORDDISK	/* 블록 디스크 */
		ON PRD.order_product_seq = ORDDISK.order_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id = ORDDISK.project_id

		LEFT OUTER JOIN oss_vm VM		/* 가상서버 */
		ON VM.vm_uuid = ORDDISK.vm_uuid

		LEFT OUTER JOIN bss_product PRDDISK	/* 블록 디스크 상품 */
		ON PRDDISK.product_seq=ORDDISK.disk_product_seq

		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDDISK.disk_catalog_seq
		AND CF.program_seq = ORDDISK.disk_product_seq

		INNER JOIN oss_cloud OC
		ON PJ.cloud_id = OC.cloud_id

		LEFT OUTER JOIN provisioning_queue PQ
		ON PRD.order_product_seq = PQ.order_product_seq

		WHERE PRD.order_no =#{orderNo}
		AND PRD.product_category ='PRODCATE_DISK'
  	</select>
   	<!-- 서비스 보안관제 주문 리스트-->
<!--
    <select id="getReqSerOrderList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/

			ORDSE.on_demand_flag,	/* 즉시희망 여부*/
			ORDSE.apply_datetime,	/* 서비스 희망 일시 */
			ORDSE.hourly_flag,	/* 시간단위 과금여부 */
			ORDSE.project_id  AS project_id,	/* 프로젝트 ID */

			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */

			ORDSE.description  	AS description,	/* 비고 */
			ORDSE.security_catalog_seq,	/* 로드밸런서  카탈로그 SEQ */
			ORDSE.security_product_seq,	/* 로드밸런서  상품 SEQ */
			file_id AS image_name,		/* 이미지 이름 */
			CONCAT(CF.file_path,CF.file_id) AS image_path,	/* 가상서버 이미지 경로 */

			ORDSE.security_ea, 		/* 로드밸런서 수량 */
			(select user_name from cmm_user where user_id = ORDSE.work_user_id) AS workUserName

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_security ORDSE /* 보안관제 */
		ON PRD.order_product_seq = ORDSE.order_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDSE.project_id


		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDSE.security_catalog_seq
		AND CF.program_seq = ORDSE.security_product_seq

		WHERE PRD.order_no =#{orderNo}
		AND PRD.product_category ='PRODCATE_SECURITY'
  	</select>
-->
   	<!--서비스 형상관리 주문 리스트-->
<!--
    <select id="getReqScmOrderList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			ORDSCM.on_demand_flag,	/* 즉시희망 여부*/
			ORDSCM.apply_datetime,	/* 서비스 희망 일시 */
			ORDSCM.hourly_flag,	/* 시간단위 과금여부 */
			ORDSCM.project_id  AS project_id,	/* 프로젝트 ID */
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */

			ORDSCM.description  	AS description,	/* 비고 */
			ORDSCM.scm_catalog_seq,	/* 형상관리  카탈로그 SEQ */
			ORDSCM.scm_product_seq,	/* 형상관리  상품 SEQ */
			file_id AS image_name,		/* 이미지 이름 */
			CONCAT(CF.file_path,CF.file_id) AS image_path,	/* 가상서버 이미지 경로 */

			ORDSCM.scm_ea, 		/* 로드밸런서 수량 */
			(select user_name from cmm_user where user_id = ORDSCM.work_user_id) AS workUserName

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_scm ORDSCM /* 형상관리 */
		ON PRD.order_product_seq = ORDSCM.order_product_seq

		LEFT OUTER JOIN bss_product PRDLB		/* 로드밸런서  상품 */
		ON PRDLB.product_seq= ORDSCM.scm_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDSCM.project_id


		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDSCM.scm_catalog_seq
		AND CF.program_seq = ORDSCM.scm_product_seq

		WHERE PRD.order_no =#{orderNo}
		AND PRD.product_category ='PRODCATE_SCM'
  	</select>
-->
   	<!--서비스 대외계  주문 리스트-->
<!--
    <select id="getReqMcaOrderList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/

			ORDMCA.on_demand_flag,	/* 즉시희망 여부*/
			ORDMCA.apply_datetime,	/* 서비스 희망 일시 */
			ORDMCA.hourly_flag,	/* 시간단위 과금여부 */
			ORDMCA.project_id  AS project_id,	/* 프로젝트 ID */

			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */

			ORDMCA.description  	AS description,	/* 비고 */
			ORDMCA.mca_catalog_seq,	/* 로드밸런서  카탈로그 SEQ */
			ORDMCA.mca_product_seq,	/* 로드밸런서  상품 SEQ */
			file_id AS image_name,		/* 이미지 이름 */
			CONCAT(CF.file_path,CF.file_id) AS image_path,	/* 가상서버 이미지 경로 */

			ORDMCA.mca_ea, 		/* 로드밸런서 수량 */
			(select user_name from cmm_user where user_id = ORDMCA.work_user_id) AS workUserName

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_mca ORDMCA /* 로드밸런서 */
		ON PRD.order_product_seq = ORDMCA.order_product_seq

		LEFT OUTER JOIN bss_product PRDLB		/* 로드밸런서  상품 */
		ON PRDLB.product_seq= ORDMCA.mca_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDMCA.project_id


		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDMCA.mca_catalog_seq
		AND CF.program_seq = ORDMCA.mca_product_seq

		WHERE PRD.order_no =#{orderNo}
		AND PRD.product_category ='PRODCATE_MCA'
  	</select>
-->
   	<!--서비스 백업  주문 리스트-->
<!--
    <select id="getReqBakOrderList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
	<![CDATA[
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			ORDBACK.vm_uuid,			/* 가상서버 UUID */

			ORDBACK.on_demand_flag,	/* 즉시희망 여부*/
			ORDBACK.apply_datetime,	/* 서비스 희망 일시 */
			ORDBACK.hourly_flag,	/* 시간단위 과금여부 */
			ORDBACK.project_id  AS project_id,	/* 프로젝트 ID */

			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
            VM.hostname,			/* 가상서버 호스트명 */
			(
			 SELECT GROUP_CONCAT(LBVM.hostname SEPARATOR '<br>') FROM
				(
					SELECT BBLBVM.order_product_seq, BBLBVM.vm_uuid, IFNULL(VM.hostname_alias, '-') AS hostname
					FROM bss_order_product_backup_vm BBLBVM
					LEFT OUTER JOIN oss_vm VM
					ON BBLBVM.vm_uuid = VM.vm_uuid
				) LBVM
				WHERE LBVM.order_product_seq = ORDBACK.order_product_seq GROUP BY LBVM.order_product_seq
			) AS hostname_alias,		/* 가상서버 한글 */
			ORDBACK.description  	AS description,	/* 비고 */
			ORDBACK.backup_catalog_seq,	/* 백업  카탈로그 SEQ */
			ORDBACK.backup_product_seq,	/* 백업  상품 SEQ */
			file_id AS image_name,		/* 이미지 이름 */
			CONCAT(CF.file_path,CF.file_id) AS image_path,	/* 가상서버 이미지 경로 */

			ORDBACK.backup_gb, 		/* 백업 수량 */
			(select user_name from cmm_user where user_id = ORDBACK.work_user_id) AS workUserName

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_backup ORDBACK /* 백업 */
		ON PRD.order_product_seq = ORDBACK.order_product_seq

		LEFT OUTER JOIN bss_product PRDLB		/* 백업  상품 */
		ON PRDLB.product_seq= ORDBACK.backup_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDBACK.project_id

		LEFT OUTER JOIN oss_vm VM		/* 가상서버 */
		ON VM.vm_uuid = ORDBACK.vm_uuid

		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDBACK.backup_catalog_seq
		AND CF.program_seq = ORDBACK.backup_product_seq

		WHERE PRD.order_no =#{orderNo}
		AND PRD.product_category ='PRODCATE_BACKUP'
	]]>
  	</select>
-->


  	<!--서비스   주문 리스트-->
    <select id="getReqServiceOrderList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
	<![CDATA[

		SELECT
		    OC.cloud_name,
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			ORDSER.vm_uuid,			/* 가상서버 UUID */
			ORDSER.on_demand_flag,	/* 즉시희망 여부*/
			ORDSER.apply_datetime,	/* 서비스 희망 일시 */
			ORDSER.hourly_flag,	/* 시간단위 과금여부 */
			ORDSER.project_id  AS project_id,	/* 프로젝트 ID */
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			ORDSER.description  	AS description,	/* 비고 */
			ORDSER.service_catalog_seq,	/* 백업  카탈로그 SEQ */
			ORDSER.service_product_seq,	/* 백업  상품 SEQ */
			file_id AS image_name,		/* 이미지 이름 */
			CONCAT(CF.file_path,CF.file_id) AS image_path,	/* 가상서버 이미지 경로 */

			ORDSER.ansible_status,
			ORDSER.ansible_status_message,
			ORDSER.bastion_vm_user_id,
			ORDSER.bastion_vm_user_password,

			ORDSER.service_name,
			ORDSER.service_type,
			REQSER.code_name AS service_type_name,
			hostname,
			hostname_alias,
			ORDSER.service_ea,
			(select user_name from cmm_user where user_id = ORDSER.work_user_id) AS workUserName,
			OA.app_name

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_service ORDSER
		ON PRD.order_product_seq = ORDSER.order_product_seq

		LEFT OUTER JOIN bss_product PRDLB
		ON PRDLB.product_seq= ORDSER.service_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDSER.project_id

		LEFT OUTER JOIN oss_vm VM		/* 가상서버 */
		ON VM.vm_uuid = ORDSER.vm_uuid

		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQSER		/* 서비스 유형 */
		ON REQSER.code_key_id ='SERVICE_TYPE'
		AND REQSER.code_id = ORDSER.service_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

       LEFT OUTER JOIN oss_app OA
       ON ORDSER.app_uuid = OA.app_uid

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDSER.service_catalog_seq
		AND CF.program_seq = ORDSER.service_product_seq

		INNER JOIN oss_cloud OC
		ON PJ.cloud_id = OC.cloud_id


		WHERE PRD.order_no =#{orderNo}
		AND PRD.product_category ='PRODCATE_SERVICE'

	]]>
  	</select>


   	<!--가상서버  주문 리스트-->
    <select id="getReqVMOrderList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
		SELECT
		    BPV.image_type,
		    ORDVM.volume_type,
			BSSORD.order_user_id,
			BSSORD.order_name,
			PRD.order_product_seq,
			PRD.order_no,
			PRD.request_type,
			REQCD.code_name AS request_name,
			PRD.product_category,
			REQCAT.code_name AS product_category_name,
			PRD.order_summary,
			PRD.hourly_flag,
			PRD.amount,
			ORDVM.az_name,
			ORDVM.on_demand_flag,
			ORDVM.apply_datetime,
			ORDVM.hourly_flag,
			ORDVM.project_id  AS project_id,
			PJ.project_name,
			PJ.project_alias,
			PJ.project_box_id,
			ORDVM.vm_uuid,
			CASE PRD.request_type
				WHEN 'REQTYPE_NEW' THEN ORDVM.hostname	ELSE VM.hostname
			END AS hostname,
			CASE PRD.request_type
				WHEN 'REQTYPE_NEW' THEN ORDVM.hostname_alias ELSE VM.hostname_alias
			END AS hostname_alias,
			ORDVM.default_network_id,
			CASE PRD.request_type
				WHEN 'REQTYPE_NEW' THEN ORDVM.default_network_ip ELSE PORT.fixed_ips
			END AS default_network_ip,
			--ORDVM.default_network_ip,
			IFNULL(NT.network_alias,ORDVM.default_network_name) AS default_network_name,
			CASE PRD.request_type
				WHEN 'REQTYPE_NEW' THEN ORDVM.backup_network_ip ELSE PORT_BACK.fixed_ips
			END AS backup_network_ip,
			--ORDVM.backup_network_ip,
			ORDVM.backup_network_flag,
			ORDVM.description  	AS description,
			ORDVM.vcpus,
			ORDVM.mem_gb,
			ORDVM.disk_gb,
			ORDVM.flavor_id AS bastionFlavorId,
			CASE PRD.request_type
			WHEN 'REQTYPE_NEW' THEN CAST(ORDVM.vcpus AS VARCHAR)
			WHEN 'REQTYPE_CHANGE' THEN CONCAT(CONCAT(CAST(ORDVM.before_vcpus AS VARCHAR),  CAST('->' AS VARCHAR)), CAST(ORDVM.vcpus AS VARCHAR))
			WHEN 'REQTYPE_EXPR' THEN CAST(ORDVM.vcpus AS VARCHAR)
			ELSE CAST(0 AS VARCHAR)
			END AS vcpus2,
			CASE PRD.request_type
			WHEN 'REQTYPE_NEW' THEN CAST(ORDVM.mem_gb AS VARCHAR)
			WHEN 'REQTYPE_CHANGE' THEN CONCAT(CONCAT(CAST(ORDVM.before_mem_gb AS VARCHAR),  CAST('->' AS VARCHAR)), CAST(ORDVM.mem_gb AS VARCHAR))
			WHEN 'REQTYPE_EXPR' THEN CAST(ORDVM.mem_gb AS VARCHAR)
			ELSE CAST(0 AS VARCHAR)
			END AS mem_gb2,
			ORDVM.disk_gb AS vm_disk_gb,
			ORDVM.vm_catalog_seq,
			ORDVM.vm_product_seq,
			PRDVM.product_name AS vm_product_name,
			CF.file_id AS image_name,
			ORDVM.os_product_seq,
			IFNULL(PROS.product_name, ORDVM.os_product_name )AS os_product_name,
			oc.cloud_name,
			oc.cloud_id,
			oc.cloud_type,
			PQ.provisioning_status,
			PQ.provisioning_status_message,
			PQ.end_description,
			ORDVM.ansible_status,
			ORDVM.ansible_status_message,
			ORDVM.instance_type,
			OZN.network_alias,
			(SELECT network_alias FROM oss_zone_network WHERE cloud_id = oc.cloud_id AND is_backup = 'Y') AS back_network_alias
		FROM bss_order_product PRD

		LEFT OUTER JOIN  bss_order BSSORD
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_vm ORDVM
		ON PRD.order_product_seq = ORDVM.order_product_seq

		LEFT OUTER JOIN bss_product_vm BPV
		ON ORDVM.vm_product_seq = BPV.product_seq

		LEFT OUTER JOIN oss_project PJ
		ON PJ.project_id =ORDVM.project_id

		LEFT OUTER JOIN oss_vm VM
		ON VM.vm_uuid = ORDVM.vm_uuid

		LEFT OUTER JOIN (select * from oss_port WHERE network_id  NOT IN (SELECT network_id FROM oss_network WHERE network_name = 'backup-net' AND delete_flag = 'N')       ) PORT
		ON VM.vm_uuid = PORT.device_id

		LEFT OUTER JOIN (select * from oss_port WHERE network_id  IN (  SELECT network_id FROM oss_network WHERE network_name = 'backup-net' AND delete_flag = 'N'     )    ) PORT_BACK
		ON VM.vm_uuid = PORT_BACK.device_id

		LEFT OUTER JOIN oss_network NT
		ON NT.network_id = ORDVM.default_network_id

		LEFT OUTER JOIN bss_product PRDVM
		ON PRDVM.product_seq=ORDVM.vm_product_seq

		LEFT OUTER JOIN bss_product PROS
		ON PROS.product_seq=ORDVM.os_product_seq

		LEFT OUTER JOIN cmm_code REQCD
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDVM.vm_catalog_seq
		AND CF.program_seq = ORDVM.vm_product_seq

		LEFT OUTER JOIN provisioning_queue PQ
		ON PQ.order_product_seq = PRD.order_product_seq

		LEFT OUTER JOIN oss_cloud oc
		ON PJ.cloud_id = oc.cloud_id

		LEFT JOIN oss_zone_network OZN
		ON OZN.network_id = ORDVM.default_network_id
		AND OZN.zone_name = ORDVM.az_name

		WHERE PRD.order_no =#{orderNo}
		AND PRD.product_category ='PRODCATE_VM'
  	</select>

  	<!--주문서  주문 리스트-->
    <select id="getReqOrderList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
		SELECT
			BOP.order_no
			, BOP.order_product_seq
			, BO.order_user_id
			, CU.user_name
			, CONCAT(
				IFNULL(BOPV.project_id,'')
				, IFNULL(BOPD.project_id,'')
				, IFNULL(BOPSER.project_id,'')
			) AS project_id
			, (SELECT project_alias FROM oss_project WHERE project_id = CONCAT(
				IFNULL(BOPV.project_id,'')
				, IFNULL(BOPD.project_id,'')
				, IFNULL(BOPSER.project_id,'')
			)) AS project_alias
			, BOP.order_summary
			, request_type
			, product_category
		FROM bss_order_product BOP 					/* 주문서 */
		LEFT JOIN bss_order BO
		ON BOP.order_no = BO.order_no
		LEFT JOIN cmm_user CU
		ON BO.order_user_id = CU.user_id
		LEFT JOIN bss_order_product_vm BOPV 		/* 가상서버 */
		ON BOP.order_product_seq = BOPV.order_product_seq
		LEFT JOIN bss_order_product_disk BOPD 		/* 디스크 */
		ON BOP.order_product_seq = BOPD.order_product_seq
		LEFT JOIN bss_order_product_service BOPSER 	/* 서비스 */
		ON BOP.order_product_seq = BOPSER.order_product_seq
		WHERE BOP.order_product_Seq = #{orderNo}
  	</select>

  	<select id="getOrderVm" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
		SELECT * FROM
		bss_order_product_vm
		WHERE order_product_Seq = #{orderNo}
  	</select>

    <select id="pmList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
			user_id,
			user_name
		FROM
			cmm_user
		where
			SUBSTR(user_authority,2,1) ='1'
  		<if test="keyword != ''">
  			AND user_name like CONCAT('%',#{keyword},'%')
  		</if>
  	</select>

 	<!--작업요청 페이지 등록-->
  	<insert id="setReqWork" parameterType="CustomReqProductVO" >
	  	insert into req_work
		(
			req_work_seq,
			order_product_seq,
			work_state,
			description,
			reg_user_id,
			reg_datetime
		)
		VALUES
		(
			#{reqWorkSeq},
			#{orderProductSeq},
			'N',
			#{description},
			#{regUserId},
			now()
		)
  	</insert>

	<!--  유저 스텝아이디 조회 작업담당자 관련 -->
    <select id="getStepId" resultType="String" parameterType="java.util.Map" >
		SELECT
			step_id
		FROM
			sr_approval_step
		WHERE
			request_seq=#{orderNo}
		  AND (
			apprv_state IN ('APPRV_PROCESSING','APPRV_UNASSIGNED')
			OR
			(right_step_id= '*' AND apprv_state='APPRV_COMPLETED')
		  )
  	</select>

	<!--  유저 승인단계 조회 체크박스 관련 -->
    <select id="getUserApprvState" resultType="String" parameterType="java.util.Map" >
		SELECT
			apprv_state
		FROM
			sr_approval_step
		WHERE
			step_id=#{stepId}
		AND
			request_seq=#{orderNo}
  	</select>

    <select id="stepIdList" resultType="CustomReqProductVO" parameterType="string" >
		SELECT
			*
		FROM
			approval_model_member
		WHERE
			step_id=#{stepId}
		GROUP BY user_id
  	</select>


	<!--  작업자 지정하고 저장-->
	<update id="setUpdateWorkUser" parameterType="CustomReqProductVO" >
	  		UPDATE
<!-- 	  		<if test="productCategory == 'PRODCATE_BACKUP'"> -->
<!-- 	  			bss_order_product_backup -->
<!-- 	  		</if> -->
	  	    <if test="productCategory == 'ITEMCATE_LOADBALANCER'">
	  			bss_order_product_loadbalancer
	  		</if>
	  		<if test="productCategory == 'ITEMCATE_SNAPSHOT'">
	  			bss_order_product_snapshot
	  		</if>
<!-- 	  	    <if test="productCategory == 'PRODCATE_MCA'"> -->
<!-- 	  			bss_order_product_mca -->
<!-- 	  		</if> -->
	  	    <if test="productCategory == 'PRODCATE_NAS'">
	  			bss_order_product_nas
	  		</if>
	  	    <if test="productCategory == 'PRODCATE_PUBLICIP'">
	  			bss_order_product_publicip
	  		</if>
<!-- 	  	    <if test="productCategory == 'PRODCATE_SCM'"> -->
<!-- 	  			bss_order_product_scm -->
<!-- 	  		</if> -->
<!-- 	  	    <if test="productCategory == 'PRODCATE_SECURITY'"> -->
<!-- 	  			bss_order_product_security -->
<!-- 	  		</if> -->
	  	    <if test="productCategory == 'PRODCATE_SERVICE'">
	  			bss_order_product_service
	  		</if>
	  		SET
	  		   work_user_id=#{workUserId}

	  		WHERE
	  		   order_product_seq = #{orderProductSeq}
	</update>
	<!--  유저 승인단계 조회 체크박스 관련 -->
    <select id="checkWorkUser" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
		P.order_no,
		P.order_product_seq,
		P.request_type,
		P.product_category,
		P.work_user_id,
		P.work_user_name
		FROM (

			SELECT
				PRD.order_no,
				PRD.order_product_seq,
				PRD.request_type,
				PRD.product_category,
				CASE PRD.product_category
				WHEN 'ITEMCATE_LOADBALANCER' 	THEN IFNULL(BAL.work_user_id,'')
				WHEN 'ITEMCATE_SNAPSHOT' 	THEN IFNULL(SNAP.work_user_id,'')
				WHEN 'PRODCATE_NAS' 		THEN IFNULL(NAS.work_user_id,'')
				WHEN 'PRODCATE_PUBLICIP' 	THEN IFNULL(IP.work_user_id,'')
				WHEN 'PRODCATE_SERVICE'	THEN IFNULL(SER.work_user_id,'')
				ELSE ''
				END AS work_user_id,
				CASE PRD.product_category
				WHEN 'ITEMCATE_LOADBALANCER' 	THEN IFNULL((SELECT CU.user_name FROM cmm_user CU WHERE CU.user_id = BAL.work_user_id),'')
				WHEN 'PRODCATE_NAS' 		THEN IFNULL((SELECT CU.user_name FROM cmm_user CU WHERE CU.user_id = NAS.work_user_id),'')
				WHEN 'PRODCATE_PUBLICIP'	THEN IFNULL((SELECT CU.user_name FROM cmm_user CU WHERE CU.user_id = IP.work_user_id),'')
				WHEN 'PRODCATE_SERVICE' 	THEN IFNULL((SELECT CU.user_name FROM cmm_user CU WHERE CU.user_id = SER.work_user_id),'')
				ELSE ''
				END AS work_user_name
			FROM bss_order_product PRD

			LEFT OUTER JOIN bss_order_product_service SER
			ON PRD.order_product_seq = SER.order_product_seq

			LEFT OUTER JOIN bss_order_product_loadbalancer BAL
			ON PRD.order_product_seq = BAL.order_product_seq

			LEFT OUTER JOIN bss_order_product_snapshot SNAP
			ON PRD.order_product_seq = SNAP.order_product_seq

			LEFT OUTER JOIN bss_order_product_nas NAS
			ON PRD.order_product_seq = NAS.order_product_seq

			LEFT OUTER JOIN bss_order_product_publicip IP
			ON PRD.order_product_seq = IP.order_product_seq

			LEFT OUTER JOIN bss_order_product_app APP
			ON PRD.order_product_seq = APP.order_product_seq

			LEFT OUTER JOIN bss_order_product_env ENV
			ON PRD.order_product_seq = ENV.order_product_seq
		) P
		 WHERE P.order_no =#{orderNo}
		 AND P.work_user_id =''
		 AND P.product_category !='PRODCATE_VM'
		 AND P.product_category !='PRODCATE_DISK'
		 AND P.product_category !='ITEMCATE_APP'
		 AND P.product_category !='PRODCATE_APP'
		 AND P.product_category !='PRODCATE_ENV'

	</select>

		<!-- 메일 발송 주문서 조회 관련 2017.08.24 이윤준 -->
    <select id="getOrderVo" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
			*
			, DATE_FORMAT(order_datetime, '%Y-%m-%d %H:%i') AS orderDatetime
		FROM bss_order where order_no = #{orderNo}
	</select>

    <insert id="insertProvisioningQueue" parameterType="CustomReqProductVO" >
    	INSERT INTO provisioning_queue
			(
				provisioning_seq
				, request_type
				, order_product_seq
				, product_category
				, on_demand_flag
				, apply_datetime
				, provisioning_status
				, order_user_id
				, reg_user_id
				, reg_datetime
				, cloud_id
				, cloud_type
			)
			VALUES
			(
				#{provisioningSeq}
				, #{requestType}
				, #{orderProductSeq}
				, #{productCategory}
				, #{onDemandFlag}
				, #{applyDatetime}
				, #{provisioningStatus}
				, #{orderUserId}
				, 'BATCH_SYSTEM'
				, NOW()
				, #{cloudId}
				, #{cloudType}
			)
  	</insert>

  	<select id="getCloudAvailList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
			SUM(OA.vm_total) AS vm_total
			, SUM(OA.vm_used) AS vm_used
			, SUM(OA.vm_avail) AS vm_avail
			, SUM(OA.vcpu_total) AS vcpu_total
			, SUM(OA.vcpu_used) AS vcpu_used
			, SUM(OA.vcpu_avail) AS vcpu_avail
			, SUM(ROUND(OA.mem_total /1024,0)) AS mem_total
			, SUM(ROUND(OA.mem_used /1024,0)) AS mem_used
			, SUM(ROUND(OA.mem_avail /1024,0)) AS mem_avail
			, SUM(OA.disk_total) AS disk_total
			, SUM(OA.disk_used) AS disk_used
			, SUM(OA.disk_avail) AS disk_avail
			, SUM(OA.nas_total) AS nas_total
			, SUM(OA.nas_used) AS nas_used
			, SUM(OA.nas_avail) AS nas_avail
			, DATE_FORMAT(OA.coll_datetime, '%Y-%m-%d %H:%i') AS collDatetime
			, D1.project_name
		FROM
		oss_availability OA
		LEFT JOIN oss_project OBI
		ON OA.project_id = OBI.project_id
		RIGHT JOIN
		(
			SELECT order_no, project_id, project_name,project_box_id
			FROM (
				SELECT DISTINCT
					BOP.order_no
					, CONCAT(
						IFNULL(BOPSR.project_id,'')
						, IFNULL(BOPD.project_id,'')
						, IFNULL((SELECT project_id FROM oss_project WHERE project_box_id = BOPL.project_id GROUP BY project_box_id),'')
						, IFNULL((SELECT project_id FROM oss_project WHERE project_box_id = BOPS.project_id GROUP BY project_box_id),'')
						, IFNULL(BOPN.project_id,'')
						, IFNULL(BOPP.project_id,'')
						, IFNULL(BOPV.project_id,'')
						, IFNULL(BOAP.project_id,'')
						, IFNULL((SELECT project_id FROM oss_project WHERE project_box_id = BOAE.project_box_id AND env_type = 'DEV'),'')
						, IFNULL(BOPRD.project_id,'')
					) AS projectId
				FROM bss_order_product BOP
				LEFT JOIN bss_order_product_service BOPSR
				ON BOP.order_product_seq = BOPSR.order_product_seq

				LEFT JOIN bss_order_product_disk BOPD
				ON BOP.order_product_seq = BOPD.order_product_seq
				LEFT JOIN bss_order_product_loadbalancer BOPL
				ON BOP.order_product_seq = BOPL.order_product_seq
				LEFT JOIN bss_order_product_nas BOPN
				ON BOP.order_product_seq = BOPN.order_product_seq
				LEFT JOIN bss_order_product_publicip BOPP
				ON BOP.order_product_seq = BOPP.order_product_seq
				LEFT JOIN bss_order_product_vm BOPV
				ON BOP.order_product_seq = BOPV.order_product_seq
				LEFT JOIN bss_order_product_snapshot BOPS
				ON BOP.order_product_seq = BOPS.order_product_seq
				LEFT JOIN bss_order_product_app BOAP
				ON BOP.order_product_seq = BOAP.order_product_seq
				LEFT JOIN bss_order_product_env BOAE
				ON BOP.order_product_seq = BOAE.order_product_seq
				LEFT JOIN bss_order_product_deploys BOPRD
				ON BOP.order_product_seq = BOPRD.order_product_seq
				WHERE  BOP.order_no = #{orderNo}
				GROUP BY BOP.order_product_seq
			) Z LEFT JOIN (SELECT project_id, IF(project_alias='', project_name, project_alias) AS project_name,project_box_id FROM oss_project WHERE delete_flag = 'N') OP
			ON Z.projectId = OP.project_id
		) D1
		ON OBI.project_box_id = D1.project_box_id
		GROUP BY OBI.project_box_id
		limit 0,1
	</select>

	<select id="getCloudAvail" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
			'ALL' AS project_box_id
			, SUM(OA.vm_total) AS vm_total
			, SUM(OA.vm_used) AS vm_used
			, SUM(OA.vm_avail) AS vm_avail
			, SUM(OA.vcpu_total) AS vcpu_total
			, SUM(OA.vcpu_used) AS vcpu_used
			, SUM(OA.vcpu_avail) AS vcpu_avail
			, SUM(ROUND(OA.mem_total /1024,0)) AS mem_total
			, SUM(ROUND(OA.mem_used /1024,0)) AS mem_used
			, SUM(ROUND(OA.mem_avail /1024,0)) AS mem_avail
			, SUM(OA.disk_total) AS disk_total
			, SUM(OA.disk_used) AS disk_used
			, SUM(OA.disk_avail) AS disk_avail
			, SUM(OA.nas_total) AS nas_total
			, SUM(OA.nas_used) AS nas_used
			, SUM(OA.nas_avail) AS nas_avail
			, DATE_FORMAT(OA.coll_datetime, '%Y-%m-%d %H:%i') AS collDatetime
		FROM
		oss_availability OA
		WHERE project_id = 'ALL'
		GROUP BY project_id
		UNION
			SELECT
		OP.project_box_id AS project_id
		, SUM(OA.vm_total) AS vm_total
		, SUM(OA.vm_used) AS vm_used
		, SUM(OA.vm_avail) AS vm_avail
		, SUM(OA.vcpu_total) AS vcpu_total
		, SUM(OA.vcpu_used) AS vcpu_used
		, SUM(OA.vcpu_avail) AS vcpu_avail
		, SUM(ROUND(OA.mem_total /1024,0)) AS mem_total
		, SUM(ROUND(OA.mem_used /1024,0)) AS mem_used
		, SUM(ROUND(OA.mem_avail /1024,0)) AS mem_avail
		, SUM(OA.disk_total) AS disk_total
		, SUM(OA.disk_used) AS disk_used
		, SUM(OA.disk_avail) AS disk_avail
		, SUM(OA.nas_total) AS nas_total
		, SUM(OA.nas_used) AS nas_used
		, SUM(OA.nas_avail) AS nas_avail
		, DATE_FORMAT(OA.coll_datetime, '%Y-%m-%d %H:%i') AS collDatetime
			FROM
		oss_availability OA
			LEFT JOIN
		oss_project OP ON OA.project_id = OP.project_id
			WHERE OP.project_box_id = #{projectBoxId}
		GROUP BY OP.project_box_id
	</select>

    <select id="getCompany" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
			a.company_no
			, a.customer_name
			, a.company_name
			, (SELECT company_name FROM cmm_company WHERE company_id = c.up_company_id) AS up_company_name
		FROM cmm_customer a
		INNER JOIN cmm_company c
		ON a.ref_company_id = c.company_id

		RIGHT JOIN cmm_user CU
		ON a.customer_id = CU.customer_id

		RIGHT JOIN (
			SELECT *
			FROM bss_order
			WHERE order_no = #{orderNo}
		)BO
		ON BO.order_user_id = CU.user_id
	</select>

   	<!--서비스 대외계 상세 조회-->
   	<!--
    <select id="getReqMcaOrder" resultType="CustomReqProductVO" parameterType="java.lang.String">
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/

			ORDMCA.on_demand_flag,	/* 즉시희망 여부*/
			ORDMCA.apply_datetime,	/* 서비스 희망 일시 */
			ORDMCA.hourly_flag,	/* 시간단위 과금여부 */
			ORDMCA.project_id  AS project_id,	/* 프로젝트 ID */

			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */

			ORDMCA.description  	AS description,	/* 비고 */
			ORDMCA.mca_catalog_seq,	/* 로드밸런서  카탈로그 SEQ */
			ORDMCA.mca_product_seq,	/* 로드밸런서  상품 SEQ */

			CF.file_id AS image_name,	/* 가상서버 이미지 경로 */

			ORDMCA.mca_ea 		/* 로드밸런서 수량 */

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_mca ORDMCA /* 로드밸런서 */
		ON PRD.order_product_seq = ORDMCA.order_product_seq

		LEFT OUTER JOIN bss_product PRDLB		/* 로드밸런서  상품 */
		ON PRDLB.product_seq= ORDMCA.mca_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDMCA.project_id


		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDMCA.mca_catalog_seq
		AND CF.program_seq = ORDMCA.mca_product_seq

		WHERE PRD.order_product_seq =#{orderProductSeq}
		AND PRD.product_category ='PRODCATE_MCA'
  	</select>
-->
   	<!--서비스 형상관리 상세 조휘-->
   	<!--
    <select id="getReqScmOrder" resultType="CustomReqProductVO" parameterType="java.lang.String">
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			ORDSCM.on_demand_flag,	/* 즉시희망 여부*/
			ORDSCM.apply_datetime,	/* 서비스 희망 일시 */
			ORDSCM.hourly_flag,	/* 시간단위 과금여부 */
			ORDSCM.project_id  AS project_id,	/* 프로젝트 ID */
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */

			ORDSCM.description  	AS description,	/* 비고 */
			ORDSCM.scm_catalog_seq,	/* 형상관리  카탈로그 SEQ */
			ORDSCM.scm_product_seq,	/* 형상관리  상품 SEQ */

			CF.file_id AS image_name,	/* 가상서버 이미지 경로 */

			ORDSCM.scm_ea 		/* 로드밸런서 수량 */

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_scm ORDSCM /* 형상관리 */
		ON PRD.order_product_seq = ORDSCM.order_product_seq

		LEFT OUTER JOIN bss_product PRDLB		/* 로드밸런서  상품 */
		ON PRDLB.product_seq= ORDSCM.scm_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDSCM.project_id


		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDSCM.scm_catalog_seq
		AND CF.program_seq = ORDSCM.scm_product_seq

		WHERE PRD.order_product_seq =#{orderProductSeq}
		AND PRD.product_category ='PRODCATE_SCM'
  	</select>
-->
   	<!-- 서비스 보안관제 상세 조회-->
<!--
    <select id="getReqScrOrder" resultType="CustomReqProductVO" parameterType="java.lang.String">
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/

			ORDSE.on_demand_flag,	/* 즉시희망 여부*/
			ORDSE.apply_datetime,	/* 서비스 희망 일시 */
			ORDSE.hourly_flag,	/* 시간단위 과금여부 */
			ORDSE.project_id  AS project_id,	/* 프로젝트 ID */

			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */

			ORDSE.description  	AS description,	/* 비고 */
			ORDSE.security_catalog_seq,	/* 로드밸런서  카탈로그 SEQ */
			ORDSE.security_product_seq,	/* 로드밸런서  상품 SEQ */

			CF.file_id AS image_name,	/* 가상서버 이미지 경로 */

			ORDSE.security_ea 		/* 로드밸런서 수량 */

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_security ORDSE /* 보안관제 */
		ON PRD.order_product_seq = ORDSE.order_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDSE.project_id


		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDSE.security_catalog_seq
		AND CF.program_seq = ORDSE.security_product_seq

		WHERE PRD.order_product_seq =#{orderProductSeq}
		AND PRD.product_category ='PRODCATE_SECURITY'
  	</select>
-->
	<!-- 주문서 서비스 backup 상세   조회-->
<!--
    <select id="getReqBakOrder" resultType="CustomReqProductVO" parameterType="java.lang.String">
 <![CDATA[
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			CF.file_id AS image_name,
			ORDSVR.on_demand_flag,	/* 즉시희망 여부*/
			ORDSVR.apply_datetime,	/* 서비스 희망 일시 */
			ORDSVR.hourly_flag,	/* 시간단위 과금여부 */
			ORDSVR.project_id  AS project_id,	/* 프로젝트 ID */
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			(
			 SELECT GROUP_CONCAT(LBVM.hostname SEPARATOR '<br>') FROM
				(
					SELECT BBLBVM.order_product_seq, BBLBVM.vm_uuid, IFNULL(VM.hostname, '-') AS hostname
					FROM bss_order_product_backup_vm BBLBVM
					LEFT OUTER JOIN oss_vm VM
					ON BBLBVM.vm_uuid = VM.vm_uuid
				) LBVM
				WHERE LBVM.order_product_seq = ORDSVR.order_product_seq GROUP BY LBVM.order_product_seq
			) AS hostname,		/* 가상서버 호스트명 */
			(
			 SELECT GROUP_CONCAT(LBVM.hostname SEPARATOR '<br>') FROM
				(
					SELECT BBLBVM.order_product_seq, BBLBVM.vm_uuid, IFNULL(VM.hostname_alias, '-') AS hostname
					FROM bss_order_product_backup_vm BBLBVM
					LEFT OUTER JOIN oss_vm VM
					ON BBLBVM.vm_uuid = VM.vm_uuid
				) LBVM
				WHERE LBVM.order_product_seq = ORDSVR.order_product_seq GROUP BY LBVM.order_product_seq
			) AS hostname_alias,		/* 가상서버 한글 */
			ORDSVR.description  	AS description,	/* 비고 */
			ORDSVR.backup_product_seq,	/* 서비스 상품 SEQ */
			PRDSVR.product_name AS service_product_name, /* 서비스 상품 이름 */
			ORDSVR.backup_gb	/* 서비스 수량 */

		FROM bss_order_product PRD

		LEFT OUTER JOIN  bss_order BSSORD
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_backup ORDSVR
		ON PRD.order_product_seq = ORDSVR.order_product_seq

		LEFT OUTER JOIN oss_vm VM		/* 가상서버 */
		ON VM.vm_uuid = ORDSVR.vm_uuid

		LEFT OUTER JOIN bss_product PRDSVR		/*  공인IP  상품 */
		ON PRDSVR.product_seq= ORDSVR.backup_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDSVR.project_id

		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDSVR.backup_catalog_seq
		AND CF.program_seq = ORDSVR.backup_product_seq

		WHERE PRD.order_product_seq =#{orderProductSeq}
		AND PRD.product_category ='PRODCATE_BACKUP'
			]]>
	</select>
-->



	<!-- 주문서 서비스 상세   조회-->
    <select id="getReqServiceOrder" resultType="CustomReqProductVO" parameterType="java.lang.String">
 <![CDATA[
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			CF.file_id AS image_name,
			ORDSVR.on_demand_flag,	/* 즉시희망 여부*/
			ORDSVR.apply_datetime,	/* 서비스 희망 일시 */
			ORDSVR.hourly_flag,	/* 시간단위 과금여부 */
			ORDSVR.project_id  AS project_id,	/* 프로젝트 ID */
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			ORDSVR.description  	AS description,	/* 비고 */
			ORDSVR.service_product_seq,	/* 서비스 상품 SEQ */
			PRDSVR.product_name AS service_product_name, /* 서비스 상품 이름 */
			ORDSVR.service_ea	/* 서비스 수량 */

		FROM bss_order_product PRD

		LEFT OUTER JOIN  bss_order BSSORD
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_service ORDSVR
		ON PRD.order_product_seq = ORDSVR.order_product_seq

		LEFT OUTER JOIN oss_vm VM		/* 가상서버 */
		ON VM.vm_uuid = ORDSVR.vm_uuid

		LEFT OUTER JOIN bss_product PRDSVR		/*  공인IP  상품 */
		ON PRDSVR.product_seq= ORDSVR.service_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDSVR.project_id

		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDSVR.service_catalog_seq
		AND CF.program_seq = ORDSVR.service_product_seq

		WHERE PRD.order_product_seq =#{orderProductSeq}
		AND PRD.product_category ='PRODCATE_SERVICE'
			]]>
	</select>

	<!-- 자원신청승인 어플리케이션 상세팝업 쿼리 -->
	<select id="getReqAppOrder" resultType="CustomReqProductVO" parameterType="java.lang.String">
		<![CDATA[
		SELECT
			BSSORD.order_user_id, /* 신청자 ID*/
			BSSORD.order_name, /* 주문서 명*/
			PRD.order_product_seq,
			/* 주문서 상품 고유 순번*/PRD.order_no, /* 주문서 번호*/
			PRD.request_type, /* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category, /* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary, /* 주문 요약*/
			PRD.hourly_flag, /* 시간 단위 과금 여부*/
			PRD.amount, /* 주문 금액*/
			CF.file_id AS image_name,
			ORDAPP.apply_datetime, /* 서비스 희망 일시 */
			ORDAPP.project_id AS project_id, /* 프로젝트 ID */
			PJ.project_name, /* 프로젝트 이름 */
			PJ.project_alias, /* 프로젝트 알리아스 */
			ORDAPP.app_name,
			ORDAPP.git_repository,
			ORDAPP.image_id,
			ORDAPP.app_alias,
			ORDAPP.app_version,
			ORDAPP.cpu_limit,
			ORDAPP.mem_limit,
			ORDAPP.pod_cnt,
			ORDAPP.deploys_directory,
			ORDAPP.domain_url,
			ORDAPP.description AS description /* 비고 */
		FROM
			bss_order_product PRD
			LEFT OUTER JOIN bss_order BSSORD ON PRD.order_no = BSSORD.order_no
			LEFT OUTER JOIN bss_order_product_app ORDAPP ON PRD.order_product_seq = ORDAPP.order_product_seq
			LEFT OUTER JOIN bss_product PRDSVR ON PRDSVR.product_seq = ORDAPP.template_product_seq /* 공인IP 상품 */
			LEFT OUTER JOIN oss_project PJ ON PJ.project_id = ORDAPP.project_id /* 프로젝트 */
			LEFT OUTER JOIN cmm_code REQCD ON REQCD.code_key_id = 'REQUEST_TYPE'  /* 요청 유형 */
			AND REQCD.code_id = PRD.request_type
			LEFT OUTER JOIN cmm_code REQCAT ON REQCAT.code_key_id = 'PRODUCT_CATEGPRY' /* 상품 카테고리 */
			AND REQCAT.code_id = PRD.product_category
			LEFT OUTER JOIN cmm_file CF ON CF.program_name = ORDAPP.template_catalog_seq
			AND CF.program_seq = ORDAPP.template_product_seq
		WHERE
			PRD.order_product_seq = #{orderProductSeq}
			AND PRD.product_category = 'PRODCATE_APP'
		]]>
	</select>

	<select id="getReqEnvOrder" resultType="CustomReqProductVO" parameterType="java.lang.String">
		<![CDATA[
		SELECT
			BSSORD.order_user_id, /* 신청자 ID*/
			BSSORD.order_name, /* 주문서 명*/
			PRD.order_product_seq,
			/* 주문서 상품 고유 순번*/PRD.order_no, /* 주문서 번호*/
			PRD.request_type, /* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category, /* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary, /* 주문 요약*/
			PRD.hourly_flag, /* 시간 단위 과금 여부*/
			PRD.amount, /* 주문 금액*/
			CF.file_id AS image_name,
			PJ.project_name, /* 프로젝트 이름 */
			PJ.project_alias, /* 프로젝트 알리아스 */
			ORDENV.*
		FROM
			bss_order_product PRD
			LEFT OUTER JOIN bss_order BSSORD ON PRD.order_no = BSSORD.order_no
			LEFT OUTER JOIN bss_order_product_env ORDENV ON PRD.order_product_seq = ORDENV.order_product_seq
			LEFT OUTER JOIN bss_product PRDSVR ON PRDSVR.product_seq = ORDENV.env_product_seq /* 공인IP 상품 */
			LEFT OUTER JOIN oss_project PJ ON PJ.project_box_id = ORDENV.project_box_id /* 프로젝트 */
			LEFT OUTER JOIN cmm_code REQCD ON REQCD.code_key_id = 'REQUEST_TYPE'  /* 요청 유형 */
			AND REQCD.code_id = PRD.request_type
			LEFT OUTER JOIN cmm_code REQCAT ON REQCAT.code_key_id = 'PRODUCT_CATEGPRY' /* 상품 카테고리 */
			AND REQCAT.code_id = PRD.product_category
			LEFT OUTER JOIN cmm_file CF ON CF.program_name = ORDENV.env_catalog_seq
			AND CF.program_seq = ORDENV.env_product_seq
		WHERE
			PRD.order_product_seq = #{orderProductSeq}
			AND PRD.product_category = 'PRODCATE_ENV'
		GROUP BY ORDENV.project_box_id
		]]>
	</select>

	<!-- 주문서 Ip 상세   조회-->
    <select id="getReqIpOrder" resultType="CustomReqProductVO" parameterType="java.lang.String">
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			CF.file_id AS image_name,
			PRD.amount,		/* 주문 금액*/
			ORDIP.vm_uuid,
			ORDIP.on_demand_flag,	/* 즉시희망 여부*/
			ORDIP.apply_datetime,	/* 서비스 희망 일시 */
			ORDIP.hourly_flag,	/* 시간단위 과금여부 */
			ORDIP.project_id  AS project_id,	/* 프로젝트 ID */
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			ORDIP.description  	AS description,	/* 비고 */
			ORDIP.publicip_product_seq,	/* 공인IP 상품 SEQ */
			PRDIP.product_name AS loadbalancer_product_name,	 /* 공인IP 상품 이름 */
			ORDIP.publicip_ea /* 공인IP 수량 */

		FROM bss_order_product PRD

		LEFT OUTER JOIN  bss_order BSSORD
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_publicip ORDIP
		ON PRD.order_product_seq = ORDIP.order_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDIP.project_id

		LEFT OUTER JOIN bss_product PRDIP		/*  공인IP  상품 */
		ON PRDIP.product_seq= ORDIP.publicip_product_seq

		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDIP.publicip_catalog_seq
		AND CF.program_seq = ORDIP.publicip_product_seq

		WHERE PRD.order_product_seq =#{orderProductSeq}
		AND PRD.product_category ='PRODCATE_PUBLICIP'
	</select>

	<!-- 주문서 Lb 상세   조회-->
    <select id="getReqLbOrder" resultType="CustomReqProductVO" parameterType="java.lang.String">
    <![CDATA[
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			ORDLB.on_demand_flag,	/* 즉시희망 여부*/
			ORDLB.apply_datetime,	/* 서비스 희망 일시 */
			ORDLB.hourly_flag,	/* 시간단위 과금여부 */
			ORDLB.project_id  AS project_id,	/* 프로젝트 ID */
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			ORDLB.description  	AS description,	/* 비고 */
			ORDLB.loadbalancer_catalog_seq,	/* 로드밸런서  카탈로그 SEQ */
			ORDLB.loadbalancer_product_seq,	/* 로드밸런서  상품 SEQ */
			PRDLB.product_name AS loadbalancer_product_name,	 /* 로드밸런서  상품 이름 */
			CF.file_id AS image_name,	/* 가상서버 이미지 경로 */
			ORDLB.loadbalancer_name ,	/* 로드밸런서 이름 */
			ORDLB.loadbalancer_ea, 		/* 로드밸런서 수량 */
			ORDLB.ip,
			ORDLB.port,
			ORDLB.protocol,		/* PROTOCLO */
			PRO.code_name	AS protocol_name, /* PROTOCLO 이름*/
			ORDLB.method,		/* METHOD */
			MET.code_name 	AS method_name, /* METHOD 이름*/
			ORDLB.monitor_type,		/* MORITOR TYPE */
			MORTY.code_name AS 		monitor_type_name, /* MORITOR TYPE 이름*/
			NT.network_alias,
			(
				SELECT GROUP_CONCAT(LBVM.hostname SEPARATOR '<br>') FROM
				(
					SELECT OPLBVM.order_product_seq, OPLBVM.vm_uuid, IFNULL(VM.hostname_alias, '-') AS hostname
					FROM bss_order_product_loadbalancer_vm OPLBVM
					LEFT OUTER JOIN oss_vm VM
					ON OPLBVM.vm_uuid = VM.vm_uuid
				) LBVM
				WHERE LBVM.order_product_seq = ORDLB.order_product_seq GROUP BY LBVM.order_product_seq
			) AS loadbalancer_vm /* 로드밸런서 선택한 VM */

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_loadbalancer ORDLB /* 로드밸런서 */
		ON PRD.order_product_seq = ORDLB.order_product_seq

		LEFT OUTER JOIN bss_product PRDLB		/* 로드밸런서  상품 */
		ON PRDLB.product_seq= ORDLB.loadbalancer_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_box_id =ORDLB.project_id


		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category


		LEFT OUTER JOIN cmm_code PRO		/* PROTOCLO */
		ON PRO.code_key_id ='PROTOCOL'
		AND PRO.code_id = ORDLB.protocol

		LEFT OUTER JOIN cmm_code MET		/* METHOD */
		ON MET.code_key_id ='METHOD'
		AND MET.code_id = ORDLB.method

		LEFT OUTER JOIN cmm_code MORTY		/* MORITOR TYPE */
		ON MORTY.code_key_id ='MONITOR_TYPE'
		AND MORTY.code_id = ORDLB.monitor_type

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDLB.loadbalancer_catalog_seq
		AND CF.program_seq = ORDLB.loadbalancer_product_seq

		LEFT OUTER JOIN oss_network NT		/* 네트워크 */
		ON NT.network_id = ORDLB.default_network_id

		WHERE PRD.order_product_seq =#{orderProductSeq}
		AND PRD.product_category ='ITEMCATE_LOADBALANCER'
		GROUP BY project_box_id
	]]>
	</select>

	<!-- 주문서 nas 상세   조회-->
    <select id="getReqNasOrder" resultType="CustomReqProductVO" parameterType="java.lang.String">
		SELECT
			BSSORD.order_user_id,		/* 신청자 ID*/
			BSSORD.order_name,		/* 주문서 명*/
			PRD.order_product_seq, 		/* 주문서 상품 고유 순번*/
			PRD.order_no,			/* 주문서 번호*/
			PRD.request_type,		/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,		/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,		/* 주문 요약*/
			PRD.hourly_flag,		/* 시간 단위 과금 여부*/
			PRD.amount,			/* 주문 금액*/
			ORDNAS.on_demand_flag,		/* 즉시희망 여부*/
			ORDNAS.apply_datetime,		/* 서비스 희망 일시 */
			ORDNAS.hourly_flag,		/* 시간단위 과금여부 */
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			ORDNAS.nas_catalog_seq,		/* NAS  카탈로그  SEQ */
			ORDNAS.nas_product_seq,		/* NAS  상품 SEQ */
			PRDNAS.product_name,		/* NAS 상품 이름 */
			CF.file_id AS image_name,	/* NAS 이미지 경로 */
			(
			SELECT GROUP_CONCAT(OVLIST.hostname_alias SEPARATOR ', ')
			FROM bss_order_product_nas_vm ORDNAS
			INNER JOIN oss_vm OVLIST ON ORDNAS.vm_uuid = OVLIST.vm_uuid
			INNER JOIN bss_order_product PRD ON ORDNAS.order_product_seq = PRD.order_product_seq
			WHERE PRD.order_product_seq = #{orderProductSeq}
			GROUP BY ORDNAS.order_product_seq
			) AS nas_vm_list,
			ORDNAS.description,
			ORDNAS.nas_name,		/* NAS이름 */
			ORDNAS.nas_alias,		/* NAS ALIAS */
			ORDNAS.nas_option,		/* NAS OPTION */
			ORDNAS.nas_file_system_path,
			CASE PRD.request_type
			WHEN 'REQTYPE_NEW' THEN CAST(ORDNAS.nas_gb AS VARCHAR)
			WHEN 'REQTYPE_CHANGE' THEN CONCAT(CONCAT(CAST(ORDNAS.before_nas_gb AS VARCHAR),  CAST('->' AS VARCHAR)), CAST(ORDNAS.nas_gb AS VARCHAR))
			WHEN 'REQTYPE_EXPR' THEN CAST(ORDNAS.nas_gb AS VARCHAR)
			ELSE CAST(0 AS VARCHAR)
			END AS nas_change, /* NAS용량 */
			ORDNAS.nas_gb AS nas_gb2,
			OC.cloud_type,
			OC.cloud_name
		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_nas ORDNAS	/* NAS */
		ON PRD.order_product_seq = ORDNAS.order_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDNAS.project_id

		LEFT OUTER JOIN bss_product PRDNAS	/* 블록 디스크 상품 */
		ON PRDNAS.product_seq=ORDNAS.nas_product_seq

		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDNAS.nas_catalog_seq
		AND CF.program_seq = ORDNAS.nas_product_seq

		INNER JOIN oss_cloud OC
		ON PJ.cloud_id = OC.cloud_id

		WHERE PRD.order_product_seq =#{orderProductSeq}
<!-- 		and oc.cloud_id != 'eac2cb70-2293-48be-b131-8c5a3035e610' -->
		AND PRD.product_category ='PRODCATE_NAS'
	</select>

	<!-- 주문서 disk 상세   조회-->
    <select id="getReqDiskOrder" resultType="CustomReqProductVO" parameterType="java.lang.String">
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			ORDDISK.on_demand_flag,	/* 즉시희망 여부*/
			ORDDISK.apply_datetime,	/* 서비스 희망 일시 */
			ORDDISK.hourly_flag,	/* 시간단위 과금여부 */
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			ORDDISK.vm_uuid,		/* 가상서버 UUID */
			VM.hostname,			/* 가상서버 호스트명 */
			VM.hostname_alias,		/* 가상서버 한글 */
			ORDDISK.disk_name, 		/* 디스크 이름 */
			CASE PRD.request_type
			WHEN 'REQTYPE_NEW' THEN CAST(ORDDISK.disk_gb AS VARCHAR)
			WHEN 'REQTYPE_CHANGE' THEN CONCAT(CONCAT(CAST(ORDDISK.before_disk_gb AS VARCHAR),  CAST('->' AS VARCHAR)), CAST(ORDDISK.disk_gb AS VARCHAR))
			WHEN 'REQTYPE_EXPR' THEN CAST(ORDDISK.disk_gb AS VARCHAR)
			ELSE CAST(0 AS VARCHAR)
			END AS disk_gb2, /* 디스크 용량*/

			ORDDISK.disk_gb AS disk_gb,

			ORDDISK.before_disk_gb,

			ORDDISK.disk_catalog_seq,	/* 디스크 카탈로그 SEQ */
			ORDDISK.disk_product_seq,	/* 디스크 상품 SEQ */
			PRDDISK.product_name,		/* 디스크 상품 이름 */
			ORDDISK.description,
			CF.file_id AS image_name	/* 가상서버 이미지 경로 */  	/* 디스크 이미지 경로 */

		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_disk ORDDISK	/* 블록 디스크 */
		ON PRD.order_product_seq = ORDDISK.order_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDDISK.project_id

		LEFT OUTER JOIN oss_vm VM		/* 가상서버 */
		ON VM.vm_uuid = ORDDISK.vm_uuid

		LEFT OUTER JOIN bss_product PRDDISK	/* 블록 디스크 상품 */
		ON PRDDISK.product_seq=ORDDISK.disk_product_seq

		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDDISK.disk_catalog_seq
		AND CF.program_seq = ORDDISK.disk_product_seq

		WHERE PRD.order_product_seq =#{orderProductSeq}
		AND PRD.product_category ='PRODCATE_DISK'
	</select>

	<!-- 주문서 vm 상세 조회-->
    <select id="getReqVmOrder" resultType="CustomReqProductVO" parameterType="java.lang.String">
		SELECT
			BSSORD.order_user_id,	/* 신청자 ID*/
			BSSORD.order_name,	/* 주문서 명*/
			PRD.order_product_seq, 	/* 주문서 상품 고유 순번*/
			PRD.order_no,		/* 주문서 번호*/
			PRD.request_type,	/* 요청 유형 코드*/
			REQCD.code_name AS request_name, /* 요청 유형 이름*/
			PRD.product_category,	/* 상품 카테고리 코드*/
			REQCAT.code_name AS product_category_name, /* 상품 카테고리 이름*/
			PRD.order_summary,	/* 주문 요약*/
			PRD.hourly_flag,	/* 시간 단위 과금 여부*/
			PRD.amount,		/* 주문 금액*/
			ORDVM.on_demand_flag,	/* 즉시희망 여부*/
			ORDVM.apply_datetime,	/* 서비스 희망 일시 */
			ORDVM.hourly_flag,	/* 시간단위 과금여부 */
			ORDVM.project_id  AS project_id,	/* 프로젝트 ID */
			PJ.project_name,		/* 프로젝트 이름  */
			PJ.project_alias,		/* 프로젝트 알리아스  */
			ORDVM.vm_uuid,			/* 가상서버 UUID */
			ORDVM.hostname AS hostname,	/* 가상서버 호스트명 */
			ORDVM.hostname_alias AS hostname_alias,	/* 가상서버 호스트명 */
			ORDVM.default_network_id,	/* 네트워크 ID */
			NT.network_alias AS default_network_name,	/* 네트워크 이름 한글  */
			ORDVM.description  	AS description,	/* 비고 */
			ORDVM.req_message  ,	/* 요청내용 */

			CASE PRD.request_type
			WHEN 'REQTYPE_NEW' THEN CAST(ORDVM.vcpus AS VARCHAR)
			WHEN 'REQTYPE_CHANGE' THEN CONCAT(CONCAT(CAST(ORDVM.before_vcpus AS VARCHAR),  CAST('->' AS VARCHAR)), CAST(ORDVM.vcpus AS VARCHAR))
			WHEN 'REQTYPE_EXPR' THEN CAST(ORDVM.vcpus AS VARCHAR)
			ELSE CAST(0 AS VARCHAR)
			END AS vcpus2, /* vcpu*/

			ORDVM.vcpus	AS vcpus,

			CASE PRD.request_type
			WHEN 'REQTYPE_NEW' THEN CAST(ORDVM.mem_gb AS VARCHAR)
			WHEN 'REQTYPE_CHANGE' THEN CONCAT(CONCAT(CAST(ORDVM.before_mem_gb AS VARCHAR),  CAST('->' AS VARCHAR)), CAST(ORDVM.mem_gb AS VARCHAR))
			WHEN 'REQTYPE_EXPR' THEN CAST(ORDVM.mem_gb AS VARCHAR)
			ELSE CAST(0 AS VARCHAR)
			END AS mem_gb2, /* 메모리*/

			ORDVM.mem_gb AS mem_gb,

			ORDVM.disk_gb AS vm_disk_gb, /* 디스크 용량 */
			ORDVM.vm_catalog_seq, 		/* 가상서버 카탈로그 SEQ */
			ORDVM.vm_product_seq,		/* 가상서버 상품 SEQ */
			PRDVM.product_name AS vm_product_name,	 /* 가상서버 상품 이름 */
			CF.file_id AS image_name,	/* 가상서버 이미지 경로 */
			ORDVM.os_product_seq, 			/* OS 상품 SEQ */
			PROS.product_name AS os_product_name	/* OS 상품 이름*/


		FROM bss_order_product PRD	/* 주문서 */

		LEFT OUTER JOIN  bss_order BSSORD	/* 주문서 상품 */
		ON PRD.order_no = BSSORD.order_no

		LEFT OUTER JOIN bss_order_product_vm ORDVM	/* 가상서버 */
		ON PRD.order_product_seq = ORDVM.order_product_seq

		LEFT OUTER JOIN oss_project PJ		/* 프로젝트  */
		ON PJ.project_id =ORDVM.project_id

		LEFT OUTER JOIN oss_vm VM		/* 가상서버 */
		ON VM.vm_uuid = ORDVM.vm_uuid

		LEFT OUTER JOIN oss_network NT		/* 네트워크 */
		ON NT.network_id = ORDVM.default_network_id

		LEFT OUTER JOIN bss_product PRDVM	/* 가상서버 상품 */
		ON PRDVM.product_seq=ORDVM.vm_product_seq

		LEFT OUTER JOIN bss_product PROS	/* OS 상품 */
		ON PROS.product_seq=ORDVM.os_product_seq

		LEFT OUTER JOIN cmm_code REQCD		/* 요청 유형 */
		ON REQCD.code_key_id ='REQUEST_TYPE'
		AND REQCD.code_id = PRD.request_type

		LEFT OUTER JOIN cmm_code REQCAT		/* 상품 카테고리 */
		ON REQCAT.code_key_id ='PRODUCT_CATEGPRY'
		AND REQCAT.code_id = PRD.product_category

		LEFT OUTER JOIN cmm_file CF
		ON CF.program_name = ORDVM.vm_catalog_seq
		AND CF.program_seq = ORDVM.vm_product_seq

		WHERE PRD.order_product_seq =#{orderProductSeq}
		AND PRD.product_category ='PRODCATE_VM'
	</select>

	<!-- HOSTNAME Update -->
	<update id="setUpdateHostName" parameterType="CustomReqProductVO" >
  		UPDATE
			bss_order_product_vm
  		SET
			hostname = #{hostname}
  		WHERE
			order_product_seq = #{orderProductSeq}
	</update>

	<!-- IP Update -->
	<update id="setUpdateIp" parameterType="CustomReqProductVO" >
  		UPDATE
  			bss_order_product_vm
  		SET
			default_network_ip = #{defaultNetworkIp}
  		WHERE
			order_product_seq = #{orderProductSeq}
	</update>

	<!-- BACKUP IP Update -->
	<update id="setUpdateBackupIp" parameterType="CustomReqProductVO" >
  		UPDATE
			bss_order_product_vm
  		SET
			backup_network_ip = #{backupNetworkIp}
  		WHERE
			order_product_seq = #{orderProductSeq}
	</update>

	<!-- NAS IP Update -->
	<update id="setUpdateNasIp" parameterType="CustomReqProductVO" >
  		UPDATE
			bss_order_product_nas
  		SET
			default_network_ip = #{defaultNetworkIp}
  		WHERE
			order_product_seq = #{orderProductSeq}
	</update>

	<!-- VmUserId Update -->
	<update id="setUpdateUserId" parameterType="CustomReqProductVO" >
  		UPDATE
			bss_order_product_service
  		SET
			bastion_vm_user_id = #{bastionVmUserId}
  		WHERE
			order_product_seq = #{orderProductSeq}
	</update>

	<!-- VmUserPw Update -->
	<update id="setUpdateUserPw" parameterType="CustomReqProductVO" >
  		UPDATE
			bss_order_product_service
  		SET
			bastion_vm_user_password = #{bastionVmUserPassword}
  		WHERE
			order_product_seq = #{orderProductSeq}
	</update>


	<!-- 프로젝트 영문명 중복체크 -->
    <select id="getProductNameChk" parameterType="CustomReqProductVO" resultType="Integer">

  		   	SELECT COUNT(*) FROM (
    		SELECT service_name FROM bss_basket_service WHERE service_name = #{productName}
    		UNION ALL
    		SELECT service_name FROM bss_order_product_service WHERE service_name = #{productName}
    		)

    </select>

    <select id="setHostNameCheck" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
			hostname
		FROM (
		    SELECT
		    	hostname
		    FROM
		    	oss_vm
		    WHERE
		    	hostname IS NOT NULL
		    AND del_flag != 'Y'
		    UNION
		    SELECT
		    	hostname
		    FROM
		    	bss_order_product_vm
		    WHERE
		    	hostname IS NOT NULL
		)
		WHERE 1=1
		<if test="hostname != null and !hostname.equals('')">
		AND hostname = #{hostname}
		</if>

	</select>

	<select id="setIpCheck" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT * FROM
			(
			SELECT
				fixed_ips AS default_network_ip
			FROM
				oss_port A
			LEFT JOIN
				oss_project B ON A.project_id = B.project_id
			WHERE 1=1
				AND A.delete_flag = 'N'
				AND A.fixed_ips is not null
				<if test="defaultNetworkIp!=null and !defaultNetworkIp.equals('')">
				AND A.fixed_ips = #{defaultNetworkIp}
				AND B.cloud_id = #{cloudId}
				</if>
			UNION ALL
			SELECT
				default_network_ip
			FROM
				bss_order_product_vm vm
				LEFT JOIN
				provisioning_queue que
					ON vm.order_product_seq = que.order_product_seq
				LEFT JOIN
				oss_project op
					ON vm.project_id = op.project_id
			WHERE 1=1
				<if test="defaultNetworkIp!=null and !defaultNetworkIp.equals('')">
				AND vm.default_network_ip = #{defaultNetworkIp}
				AND op.cloud_id = #{cloudId}
				</if>
				AND
				(
				que.provisioning_status IS NULL or que.provisioning_status = 'PROVISIONING_READY'
				)
				AND default_network_ip is not null
			)
		GROUP BY default_network_ip ORDER BY default_network_ip
	</select>

		<select id="setNasIpCheck" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT * FROM
			(
			SELECT
				fixed_ips AS default_network_ip
			FROM
				oss_port A
			LEFT JOIN
				oss_project B ON A.project_id = B.project_id
			WHERE 1=1
				AND A.delete_flag = 'N'
				AND A.fixed_ips is not null
				<if test="defaultNetworkIp!=null and !defaultNetworkIp.equals('')">
				AND A.fixed_ips = #{defaultNetworkIp}
				AND B.cloud_id = #{cloudId}
				</if>
			UNION ALL
			SELECT
				default_network_ip
			FROM
				bss_order_product_nas vm
				LEFT JOIN
				provisioning_queue que
					ON vm.order_product_seq = que.order_product_seq
				LEFT JOIN
				oss_project op
					ON vm.project_id = op.project_id
			WHERE 1=1
				<if test="defaultNetworkIp!=null and !defaultNetworkIp.equals('')">
				AND vm.default_network_ip = #{defaultNetworkIp}
				AND op.cloud_id = #{cloudId}
				</if>
				AND
				(
				que.provisioning_status IS NULL or que.provisioning_status = 'PROVISIONING_READY'
				)
				AND default_network_ip is not null
			)
		GROUP BY default_network_ip ORDER BY default_network_ip
	</select>

	<select id="setBackupIpCheck" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT * FROM
			(SELECT
				fixed_ips AS default_network_ip
			FROM
				oss_port A
			LEFT JOIN
				oss_project B ON A.project_id = B.project_id
			WHERE 1=1
				AND A.delete_flag = 'N'
				AND A.fixed_ips is not null
				<if test="backupNetworkIp!=null and !backupNetworkIp.equals('')">
				AND A.fixed_ips = #{backupNetworkIp}
				AND B.cloud_id = #{cloudId}
				</if>
			UNION ALL
			SELECT
				default_network_ip
			FROM
				bss_order_product_vm vm
				LEFT JOIN
				provisioning_queue que
					ON vm.order_product_seq = que.order_product_seq
				LEFT JOIN
				oss_project op
					ON vm.project_id = op.project_id
			WHERE 1=1
				AND
				(
				que.provisioning_status IS NULL or que.provisioning_status = 'PROVISIONING_READY'
				)
				AND vm.default_network_ip is not null
				<if test="backupNetworkIp!=null and !backupNetworkIp.equals('')">
				AND vm.default_network_ip = #{backupNetworkIp}
				AND op.cloud_id = #{cloudId}
				</if>
			)
		GROUP BY default_network_ip ORDER BY default_network_ip
	</select>

	<select id="setUserIdCheck" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
		SELECT
			bastion_vm_user_id
		FROM (
		    SELECT
		    	bastion_vm_user_id
		    FROM
		    	oss_service
		    WHERE
		    	bastion_vm_user_id IS NOT NULL
		    AND del_flag != 'Y'
		    UNION
		    SELECT
		    	bastion_vm_user_id
		    FROM
		    	bss_order_product_service
		    WHERE
		    	bastion_vm_user_id IS NOT NULL
		)
		WHERE 1=1
		<if test="bastionVmUserId != null and !bastionVmUserId.equals('')">
		AND bastion_vm_user_id = #{bastionVmUserId}
		</if>
	</select>

	<select id="setUserPwCheck" resultType="CustomReqProductVO" parameterType="CustomReqProductVO">
		SELECT
			bastion_vm_user_password
		FROM (
		    SELECT
		    	bastion_vm_user_password
		    FROM
		    	oss_service
		    WHERE
		    	bastion_vm_user_password IS NOT NULL
		    AND del_flag != 'Y'
		    UNION
		    SELECT
		    	bastion_vm_user_password
		    FROM
		    	bss_order_product_service
		    WHERE
		    	bastion_vm_user_password IS NOT NULL
		)
		WHERE 1=1
		<if test="bastionVmUserPassword != null and !bastionVmUserPassword.equals('')">
		AND bastion_vm_user_password = #{bastionVmUserPassword}
		</if>
	</select>

	<select id="getProvisioningStatus" resultType="CustomReqProductVO" parameterType="java.lang.String" >
		SELECT
			provisioning_status
			, provisioning_status_message
			, order_product_seq
		FROM
			provisioning_queue
		WHERE order_product_seq =#{orderProductSeq}
	</select>

	<update id="changeProvisioning" parameterType="CustomReqProductVO" >
  		UPDATE
			provisioning_queue
  		SET
			provisioning_status = 'PROVISIONING_READY'
  		WHERE
			order_product_seq = #{orderProductSeq}
	</update>
	<update id="endProvisioning" parameterType="CustomReqProductVO" >
  		UPDATE
			provisioning_queue
  		SET
			provisioning_status = 'PROVISIONING_END',
			end_description = #{endDescription}

  		WHERE
			order_product_seq = #{orderProductSeq}
	</update>
	<select id="getOrderList" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
			*
		FROM
			bss_order_product
		WHERE
			order_no = #{orderNo}
		AND product_category in ('PRODCATE_VM','PRODCATE_DISK')
	</select>

	<select id="getSumVm" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
			IFNULL(SUM(vcpus),0) AS vcpus,
			IFNULL(sum(disk_gb),0) AS disk_gb,
			IFNULL(sum(mem_gb),0) AS mem_gb,
			IFNULL(SUM(before_vcpus),0) AS before_vcpus,
			IFNULL(SUM(before_mem_gb),0) AS before_mem_gb,
			COUNT(*) AS vm_used,
			COUNT(CASE WHEN BSO.request_type = 'REQTYPE_CHANGE' THEN 1 END) AS change_cnt,
			COUNT(CASE WHEN BSO.request_type = 'REQTYPE_EXPR' THEN 1 END) AS expr_cnt,
			IFNULL(SUM(CASE WHEN BSO.request_type IN ('REQTYPE_CHANGE') THEN disk_gb END),0) AS before_disk_gb,
			(SELECT COUNT(*) FROM oss_disk WHERE project_id = BOPV.project_id) AS disk_used,
			BOPV.project_id,
			OP.cloud_id,
			OC.cloud_type
			FROM bss_order_product BSO
			LEFT JOIN bss_order_product_vm BOPV
			ON BSO.order_product_seq = BOPV.order_product_seq
			LEFT JOIN oss_project OP
			ON OP.project_id = BOPV.project_id
			LEFT JOIN oss_cloud OC
			ON OP.cloud_id = OC.cloud_id
		WHERE
			order_no = #{orderNo}
			AND BSO.product_category = 'PRODCATE_VM'
			GROUP BY BOPV.project_id
	</select>

	<select id="getSumDisk" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
			IFNULL(SUM(CASE WHEN BSO.request_type != 'REQTYPE_EXPR' THEN disk_gb END),0) AS disk_gb,
			IFNULL(SUM(CASE WHEN BSO.request_type = 'REQTYPE_NEW' THEN 1 END),0) AS new_cnt,
			IFNULL(SUM(CASE WHEN BSO.request_type IN ('REQTYPE_CHANGE') THEN before_disk_gb END),0) AS before_disk_gb,
			(SELECT COUNT(*) FROM oss_disk WHERE project_id = BOPD.project_id) AS disk_used,
			BOPD.project_id,
			OP.cloud_id,
			OC.cloud_type
		FROM bss_order_product BSO
			LEFT JOIN bss_order_product_disk BOPD
			ON BSO.order_product_seq = BOPD.order_product_seq
			LEFT JOIN oss_project OP
			ON OP.project_id = BOPD.project_id
			LEFT JOIN oss_cloud OC
			ON OP.cloud_id = OC.cloud_id
		WHERE
			order_no = #{orderNo}
			AND BSO.product_category = 'PRODCATE_DISK'
			GROUP BY BOPD.project_id
	</select>

	<select id="getSumService" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
			BOPD.project_id,
			OP.cloud_id,
			OC.cloud_type
		FROM bss_order_product BSO
			LEFT JOIN bss_order_product_service BOPD
			ON BSO.order_product_seq = BOPD.order_product_seq
			LEFT JOIN oss_project OP
			ON OP.project_id = BOPD.project_id
			LEFT JOIN oss_cloud OC
			ON OP.cloud_id = OC.cloud_id
		WHERE
			order_no = #{orderNo}
			AND BSO.product_category = 'PRODCATE_SERVICE'
			GROUP BY BOPD.project_id
	</select>
	<select id="getSumLB" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
			OV.project_id,
			OC.cloud_id,
			OC.cloud_type
		FROM bss_order_product BSO
			LEFT JOIN bss_order_product_loadbalancer_vm BOPL
			ON BSO.order_product_seq = BOPL.order_product_seq
			LEFT JOIN oss_vm  OV
			ON BOPL.vm_uuid = OV.vm_uuid
			LEFT JOIN oss_project OP
			ON OP.project_id = OV.project_id
			LEFT JOIN oss_cloud OC
			ON OP.cloud_id = OC.cloud_id
		WHERE
			order_no = #{orderNo}
	</select>
	<select id="getSumSN" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
			OV.project_id,
			OC.cloud_id,
			OC.cloud_type
		FROM bss_order_product BSO
			LEFT JOIN bss_order_product_snapshot BOSN
			ON BSO.order_product_seq = BOSN.order_product_seq
			LEFT JOIN oss_vm  OV
			ON BOSN.vm_uuid = OV.vm_uuid
			LEFT JOIN oss_project OP
			ON OP.project_id = OV.project_id
			LEFT JOIN oss_cloud OC
			ON OP.cloud_id = OC.cloud_id
		WHERE
			order_no = #{orderNo}
	</select>
	<select id="getSumAPP" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
			OP.project_id,
			OC.cloud_id,
			OC.cloud_type
		FROM bss_order_product BSO
			LEFT JOIN bss_order_product_app BOAPP
			ON BSO.order_product_seq = BOAPP.order_product_seq
			LEFT JOIN oss_project OP
			ON OP.project_id = BOAPP.project_id
			LEFT JOIN oss_cloud OC
			ON OP.cloud_id = OC.cloud_id
		WHERE
			order_no = #{orderNo}
	</select>



	<select id="getFlaverDetail" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
				flavor_id,
				flavor_name,
				flavor_type,
				ram_mb,
				disk_gb,
				ephemeral_gb,
				vcpus,
				swap_mb,
				is_public,
				properties,
				reg_datetime,
				reg_user_id,
				mod_datetime,
				mod_user_id,
				delete_flag,
				cloud_id
		 FROM oss_flavor
	   WHERE  cloud_id = #{cloudId}
		   AND ram_mb = #{memMb}
		   AND vcpus = #{vcpus}
		   AND flavor_id = #{flavorId}
	</select>

	<select id="processSumVm" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
			IFNULL(sum(vcpus),0) AS vcpus,
			IFNULL(sum(disk_gb),0) AS disk_gb,
			IFNULL(sum(mem_gb),0) AS mem_gb,
			IFNULL(SUM(before_vcpus),0) AS before_vcpus,
			IFNULL(SUM(before_mem_gb),0) AS before_mem_gb,
			IFNULL(SUM(CASE WHEN B.request_type = 'REQTYPE_NEW' THEN 1 END),0) AS new_cnt,
			IFNULL(SUM(CASE WHEN B.request_type IN ('REQTYPE_CHANGE') THEN disk_gb END),0) AS before_disk_gb,
			count(*) AS vm_used,
			COUNT(CASE WHEN B.request_type = 'REQTYPE_CHANGE' THEN 1 END) AS change_cnt,
			COUNT(CASE WHEN B.request_type = 'REQTYPE_EXPR' THEN 1 END) AS expr_cnt
		FROM
			sr_approval_step A
		LEFT JOIN bss_order_product B
		ON A.request_seq = B.order_no
		LEFT JOIN bss_order_product_vm C
		ON B.order_product_seq = C.order_product_seq
			WHERE
		A.apprv_state = 'APPRV_PROCESSING'
		AND step_level > 4
		AND B.product_category = 'PRODCATE_VM'
		AND C.project_id = #{projectId}
		OR ((SELECT COUNT(*) FROM provisioning_queue PQ LEFT JOIN bss_order_product_vm BOPV ON PQ.order_product_seq = BOPV.order_product_seq WHERE PQ.order_product_Seq = C.order_product_seq AND BOPV.project_id = #{projectId} and PQ.provisioning_status IN ('PROVISIONING_FAIL','PROVISIONING_READY')) > 0 AND A.step_level = '8' AND A.apprv_state = 'APPRV_COMPLETED')
	</select>

	<select id="processSumDisk" resultType="CustomReqProductVO" parameterType="CustomReqProductVO" >
		SELECT
			IFNULL(SUM(CASE WHEN B.request_type != 'REQTYPE_EXPR' THEN disk_gb END),0) AS disk_gb,
			IFNULL(SUM(CASE WHEN B.request_type = 'REQTYPE_NEW' THEN 1 END),0) AS new_cnt,
			IFNULL(SUM(CASE WHEN B.request_type IN ('REQTYPE_CHANGE') THEN before_disk_gb END),0) AS before_disk_gb
		FROM
			sr_approval_step A
		LEFT JOIN bss_order_product B
		ON A.request_seq = B.order_no
		LEFT JOIN bss_order_product_disk C
		ON B.order_product_seq = C.order_product_seq
			WHERE
		A.apprv_state = 'APPRV_PROCESSING'
		AND step_level > 4
		AND B.product_category = 'PRODCATE_DISK'
		AND C.project_id = #{projectId}
		OR ((SELECT COUNT(*) FROM provisioning_queue PQ LEFT JOIN bss_order_product_disk BOPV ON PQ.order_product_seq = BOPV.order_product_seq WHERE PQ.order_product_Seq = C.order_product_seq AND BOPV.project_id = #{projectId} and PQ.provisioning_status IN ('PROVISIONING_FAIL','PROVISIONING_READY')) > 0 AND A.step_level = '8' AND A.apprv_state = 'APPRV_COMPLETED')
	</select>
	<select id="getAdminProject" parameterType="CustomReqProjectVO" resultType="CustomReqProjectVO">
			SELECT
				project_id
			FROM
				oss_project
	 		WHERE project_name = 'admin'
	</select>

	<update id="bssOrderProductUpdate" parameterType="CustomReqProductVO" >
			UPDATE bss_order_product SET

			   cloud_id = #{cloudId}

			WHERE order_product_seq = #{orderProductSeq}
  	</update>

  	<update id="bssOrderProductVmUpdate" parameterType="CustomReqProductVO" >
  		UPDATE bss_order_product_vm SET

			    default_network_id = #{defaultNetworkId}
			   ,default_network_name = #{defaultNetworkName}
			   ,default_network_alias = #{defaultNetworkAlias}
			   ,flavor_id = #{flavorId}
			   ,volume_type = #{volumeType}
			   ,vm_product_seq = #{vmProductSeq}
			   ,os_product_seq = #{osProductSeq}
			   ,project_id = #{projectId}
			   ,az_name = #{azName}

        WHERE order_product_seq = #{orderProductSeq}

  	</update>

  	<update id="bssOrderProductNasUpdate" parameterType="CustomReqProductVO" >
  		UPDATE bss_order_product_nas SET

			    default_network_id = #{defaultNetworkId}
			   ,default_network_name = #{defaultNetworkName}
			   ,default_network_alias = #{defaultNetworkAlias}
			   ,project_id = #{projectId}
			   ,az_name = #{azName}

        WHERE order_product_seq = #{orderProductSeq}

  	</update>

    <!-- 어플리케이션 영문명 중복체크 -->
    <select id="bssOrderProductAppNameChk" parameterType="CustomReqProductVO" resultType="Integer">
  		SELECT COUNT(*)
    	  FROM oss_app A
    	  INNER JOIN oss_project B
    	  	ON A.project_id = B.project_id
    	 WHERE A.app_name = #{appName}
    	   AND A.project_id = #{projectId}
    </select>

	<select id="detailBssOrder" parameterType="CustomReqProductVO" resultType="CustomReqProductVO">
		SELECT
			BOP.order_product_seq
			, BOP.request_type
			, BOP.product_category
			, BO.order_user_id
			, BO.apprv_state
			, BOP.cloud_id
			, OC.cloud_type
		FROM
			bss_order_product BOP
		LEFT JOIN
			bss_order BO
		ON BOP.order_no = BO.order_no
		LEFT JOIN
			oss_cloud OC
		ON OC.cloud_id = BOP.cloud_id
		WHERE
			BOP.order_no = #{orderNo}
	</select>

	<update id="bssOrderProductAppUpdate" parameterType="CustomReqProductVO" >
		update	bss_order_product_app set
			 label = #{label}
			, params = #{params}
		where	order_product_seq = #{orderProductSeq};
	</update>

	<!-- 개발환경 그룹 URL 중복체크 -->
	<select id="envGrpUrlChk" parameterType="CustomReqProductVO" resultType="Integer">
				SELECT COUNT(*)
					FROM bss_order_product_env WHERE env_group_url = #{envGroupUrl}
	</select>

	<!-- 개발환경명 중복체크 -->
	<select id="envNameChk" parameterType="CustomReqProductVO" resultType="Integer">
				SELECT COUNT(*)
					FROM bss_order_product_env WHERE env_name = #{envName}
	</select>

	<!-- 개발환경 그룹 URL 등록 -->
	<update id="envNameInsert" parameterType="CustomReqProductVO" >
		UPDATE
			bss_order_product_env
		SET
			env_name = #{envName}
		WHERE
			order_product_seq = #{orderNo}
	</update>

	<!-- 개발환경 그룹명 중복체크 -->
	<select id="envGroupNameChk" parameterType="CustomReqProductVO" resultType="Integer">
		SELECT COUNT(*)
			FROM bss_order_product_env
		WHERE env_group_name = #{envGroupName}
	</select>

	<!-- 개발환경 그룹명 등록 -->
	<update id="envGroupNameInsert" parameterType="CustomReqProductVO" >
		UPDATE
			bss_order_product_env
		SET
			env_group_name = #{envGroupName},
			env_group_url = #{envGroupName}
		WHERE
			order_product_seq = #{orderNo}
	</update>

</mapper>